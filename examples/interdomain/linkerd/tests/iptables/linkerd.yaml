---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUljSzlRaVIxUndzME85a1BiREpmd293RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpFME1UWXhOVEUwV2hjTk1qTXhNakUwTVRZeE5URTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5CNGc3d3pPZnBoOXpwL1dFYkNadkI5R1R5N25JQXp4ZHc4bWJSb3hzbVJHSnZoTHo1MQpHWHZPRG1UZFMzb29CdU5pMmNUYU9GUXFMZzBCVVhJY2JVUlRnY1lWdzNCL0xkcHhWVE1vUVN5T3BRUzhLcHZDCk9WSTRsWndZQldnZHA0UU5mUDBkVGh4QUl2KzdadDJGRExzcWhQNEtGRWhkWG5MVXg0bi92N3ZDaHZFbUpadzIKUnZHczJKUE1yY2tsOXpOcWVzK1FvVk9qQjdDWWV4bktYUlJ0L0pnb2pwanpsakFQRkNrMWl6Ui9mVm56a05URApMRnkzTXU3UnR1cHFMM3ZpYUxua1FSMmFpaTIyaFdIcXpoSlMybkpvcUhmQTdmcnJ1ZUZTQVIxSDlUSHZCdkw5CldoMTNhUEF5d3l0dW56RndDMVh4Z2s0ZHY5VzdYYkZzdzlzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBK0wzZll3TlU1eGlKQ1NTTlV5Ykd2NG5tNG1XeGxIVTZWWlRRTFdVUjEKSmY2Z0k3RzhzdUVaSEFWVk5RMVhHWlprZ2M3WEZxdUdKRjVSRFRZOEV2ZlJBTmV0NkRmblZQS2dDbytEdEVGZApQTndTTmN0WEljL1V6WGJUSDZyS1d1ZXhmcHI4eUtYVGQ3NEtBZXVTM0hmSmRzaDdnWUlDVmJCejdZNzJDdytGCnMyTUhnRUNlSmV3akVZQ3hYTnN4NjJxdTczQ1dZaWZUTVUwZkhFSHZ4WjJsY0dqYXM3bG1HaUpKajNnQ0JneWgKeUNkbFkrQTAxTUlFRlNCc3diVS9iUjBsSDBLQ21mbzY1SGxycWFzMFh1Y21kR0piMkdPeFM1ZXNodVFjbENBUgprRGdnUk80OVdsM3UzeUdWdjQzRkVubEdSV0VoWFhGL2U5NWo5TkdQamJ5YQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEhpRHZETTUrbUgzT245WVJzSm04SDBaUEx1Y2dEUEYzRHladEdqR3laRVltK0V2ClBuVVplODRPWk4xTGVpZ0c0MkxaeE5vNFZDb3VEUUZSY2h4dFJGT0J4aFhEY0g4dDJuRlZNeWhCTEk2bEJMd3EKbThJNVVqaVZuQmdGYUIybmhBMTgvUjFPSEVBaS83dG0zWVVNdXlxRS9nb1VTRjFlY3RUSGlmKy91OEtHOFNZbApuRFpHOGF6WWs4eXR5U1gzTTJwNno1Q2hVNk1Ic0poN0djcGRGRzM4bUNpT21QT1dNQThVS1RXTE5IOTlXZk9RCjFNTXNYTGN5N3RHMjZtb3ZlK0pvdWVSQkhacUtMYmFGWWVyT0VsTGFjbWlvZDhEdCt1dTU0VklCSFVmMU1lOEcKOHYxYUhYZG84RExESzI2Zk1YQUxWZkdDVGgyLzFidGRzV3pEMndJREFRQUJBb0lCQUJzMEhyeW9VcUNCdUNsQwpCTnIyODBmZWl6U0pwdHB6NXhYZU1wQ0FPN0NCNXB3d3ZtR0FGbHM1Z0ZkWktVZy9nT2FiTjUrZ2VrbEJWOUVLCm92NHBCM2tyREh3MHl0UWJSSGlFNFlGVGQyM0JEM2VXdGxpczk1M3JGRnJTSjZKMmZDMlhOUUF5bXNiRTk4dzMKUUMwWDk1bFU2eFhiYXRvbWxQU1hINUs2ZE9Lak8zMWFSN1dhZ09NeFJJQ1NlWVgzalRPSFlqRXpWYTNHQlVRYwpTUVJ5ODF3bFdjaXE4UXYrRTF0WHR5dGlzTFVEUkh0VEpXNmxheCtLdWlxaUdFei9RMm5TZzY5L0xHR0ZucXlLCmQyME00NVVyWmx6M3ZZMml6b01QdmU5dU1wMUNlOTRtc3hiVnBmTU1kek84bVN0amwzR2hPb1JoeEFsc1NqRmIKTWVMWHhBRUNnWUVBNlBmM0RCYmxRNzlLUUR1RzFteWk3V0ZPUnFCNE5jbmxqQXkxWkM3Z0pid3JPZlhvRGpuVwpFQitoVVJERnc3TXRlN0VSY09YTkVROVhhczZzR1Bya0l5UmNGZEpuNnhuTkc4RzhiOThRNUVHblVoblFiVUV0CkZ5YUVjc3FOSHNaeXdBWkNFc2NYSHNSTGQyTjA0aVl5cUVEK2pISlhJQmpuc1RGVWVnMk1yeHNDZ1lFQTVSU04KRC9INDdqRWZqUWpNSCtqUURnb0NwZXJyTVUvcWFkcnJqcUk4SDJ5WVVMUFU3T0xhZldhTVZ2KzNCVXlFUUhIUQpuczFaYjdCWGxxSU9EM2w1bFVvdEV1ZG1iWFp6bnpYU05sVjJDR2dNcDNlTE9XQThUbVJoZ0J2cDhSVk5vV1VTCnNhdkI3WDlxWVNPOHhqTVNOZ0V2d1V1bG9HQk9uWERBMWM4cnlrRUNnWUJSVW9XbGJiU1lJb1VyeU51M3EvSnYKeEtETFhLYTV1QUZ1RXQyYTNCWVlkZ2ZzMHA4dm9CYk9TQXhLdlAwYjVFY0RQM3NrR3NPcnFkeE5CMW5oMm1xYQpyYzJMUEloVDlBeTZITFhIbzJsRkZIbncyZHY4MTF5REVVbjR2Q1hvMFVNckxzUVB3L21aSHRKdEdZV3FqOFR0CklNcjZnY3RTQS8rVXhmQ0VMb2ltY3dLQmdHVm44b1hUZElGa1ozWVVKZUFlUEROcXhQOVRmYWVIbTlvZUdkWTcKQk9oWU54aktjb0FtYjlmQkZIRFNvOThKbnlXei9FaS8yRTV6dm1Jay9KcG5DS1pJZnFsMm04WHJBSVhDMm5wSQozSVllSVRQazNGR2F3emRrZ2pDbXFxbVk1NU9CWFlRZTV5ck9FM1pLenA3aUxyYVBVZWQ4S0NaVlc1ZWdPUXlzCnQ5TEJBb0dCQUlpdDVTM2MxbnJOM2lPRTJ4TURCV01yZXRRVjA5TU9tcjZXV3J6bmhqN0libFIzZHQ0QzJJUVoKVWJ0bjhLM280ZkxzN2U2Y0RkOTRqVSs2bm50emU2TmRBbXY4L1lKWHh0ZlFRK2l2U1R1WUlLdG1Udlg4RnhLWQpuWDVxeFBMNmJxL0txb0Zld1VYOEsyV1l0NVU3WlhNaGVmRmI1KzYvS08vVERuclhEVnZrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUljSzlRaVIxUndzME85a1BiREpmd293RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpFME1UWXhOVEUwV2hjTk1qTXhNakUwTVRZeE5URTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5CNGc3d3pPZnBoOXpwL1dFYkNadkI5R1R5N25JQXp4ZHc4bWJSb3hzbVJHSnZoTHo1MQpHWHZPRG1UZFMzb29CdU5pMmNUYU9GUXFMZzBCVVhJY2JVUlRnY1lWdzNCL0xkcHhWVE1vUVN5T3BRUzhLcHZDCk9WSTRsWndZQldnZHA0UU5mUDBkVGh4QUl2KzdadDJGRExzcWhQNEtGRWhkWG5MVXg0bi92N3ZDaHZFbUpadzIKUnZHczJKUE1yY2tsOXpOcWVzK1FvVk9qQjdDWWV4bktYUlJ0L0pnb2pwanpsakFQRkNrMWl6Ui9mVm56a05URApMRnkzTXU3UnR1cHFMM3ZpYUxua1FSMmFpaTIyaFdIcXpoSlMybkpvcUhmQTdmcnJ1ZUZTQVIxSDlUSHZCdkw5CldoMTNhUEF5d3l0dW56RndDMVh4Z2s0ZHY5VzdYYkZzdzlzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBK0wzZll3TlU1eGlKQ1NTTlV5Ykd2NG5tNG1XeGxIVTZWWlRRTFdVUjEKSmY2Z0k3RzhzdUVaSEFWVk5RMVhHWlprZ2M3WEZxdUdKRjVSRFRZOEV2ZlJBTmV0NkRmblZQS2dDbytEdEVGZApQTndTTmN0WEljL1V6WGJUSDZyS1d1ZXhmcHI4eUtYVGQ3NEtBZXVTM0hmSmRzaDdnWUlDVmJCejdZNzJDdytGCnMyTUhnRUNlSmV3akVZQ3hYTnN4NjJxdTczQ1dZaWZUTVUwZkhFSHZ4WjJsY0dqYXM3bG1HaUpKajNnQ0JneWgKeUNkbFkrQTAxTUlFRlNCc3diVS9iUjBsSDBLQ21mbzY1SGxycWFzMFh1Y21kR0piMkdPeFM1ZXNodVFjbENBUgprRGdnUk80OVdsM3UzeUdWdjQzRkVubEdSV0VoWFhGL2U5NWo5TkdQamJ5YQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRU1JjMCs3dXpEc0VIY1dCbFY5U3N3REFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qRTBNVFl4TlRFMFdoY05Nak14TWpFME1UWXhOVEUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURacTJPU285dnJXU3NkZ01qdVpSRjZhUzY3dEhVOGNST25GVzAzQWtmaApGTXVNd3VLT1E5c1Bub2UwRWVJZFBXUmg3UEY2dG9kTWhpMkNVbU1RbDRheTlBK0d2a1dSY0kxZGt2SnRUUjBlCndCK002RDlGbVZodXRVVTFlTDZzWFRPSlA5anpwMjBubDdHVXJTeE9LSUdiTkV1Ylc1RFNKMGtHY3llb1JIY3IKZTdUVHp3NzZMYmk5NkRqRGlNMk5nRXcxVDNmMFM4bFVhL3ZTWGlmVVgwOThlZTNoVEFGTEpYdE5PY2ZTcXJxSgpXZkEzRlI0REszY1UvNVlhQ0luL0puL24wbTZnVytpTlNWNDJOTnYrOHZPRm9McFFld01yTXpERGk2aTNlNVJrCmZ5WjFHQ1l1WUdGbm1HM1VZVVdidzMvNW1tbnBveGpEMUpGcy9CUmtqQks1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFINDVZcWJ2Rkt5T2NleUVBZExOZDlCTHQ0YlMKK05EZGhnM24vWG56V2pyREN1USs0NityZVdQdzdmR0FkSU5mdlR3OHArQkZHdlYxZHJoRGV0VzVJVXF4dHhUYgpuUE4zQVFVSzBZa1VPV1lsV1c5b2srQ0JiN1djUXZIMzJKNW9lZi9Qcy90MWRzbFRlVEt4RnhvcVM5SVBpNzZJCnp1cjI5ZFAwVTVtU20zWmgxV3hlbUUwNWJUQkFISnFYMkhTeFhGWDEzRVVYYzlFSWphay8yRGhtb3lSNHQvdUoKcGhLZVFhblJ0eGp0Z2RUak50bG5rSG1hZHdtbUI0KzZxRHBLZnA5dmcxVXpqdjR3dHdiaHJLMHlWM2xkNzhPOAo4QUxYV2ZPUFdlL1h0NGV0c0Q2dW1RZUtsbXpJMzU5Z09UdzhqL21pbURqNmVuc2lYUE9FeHdhcjNndz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMmF0amtxUGI2MWtySFlESTdtVVJlbWt1dTdSMVBIRVRweFZ0TndKSDRSVExqTUxpCmprUGJENTZIdEJIaUhUMWtZZXp4ZXJhSFRJWXRnbEpqRUplR3N2UVBocjVGa1hDTlhaTHliVTBkSHNBZmpPZy8KUlpsWWJyVkZOWGkrckYwemlUL1k4NmR0SjVleGxLMHNUaWlCbXpSTG0xdVEwaWRKQm5NbnFFUjNLM3UwMDg4TworaTI0dmVnNHc0ak5qWUJNTlU5MzlFdkpWR3Y3MGw0bjFGOVBmSG50NFV3QlN5VjdUVG5IMHFxNmlWbndOeFVlCkF5dDNGUCtXR2dpSi95Wi81OUp1b0Z2b2pVbGVOalRiL3ZMemhhQzZVSHNES3pNd3c0dW90M3VVWkg4bWRSZ20KTG1CaFo1aHQxR0ZGbThOLytacHA2YU1ZdzlTUmJQd1VaSXdTdVFJREFRQUJBb0lCQUVpQzE4RFo1VUVaaTB0Zwp3NDduREZPREJwWnhIenpyVG1peXNwZElvemxQL0I4QUxRakhnZ3BKL1ZyM09pUVRkNFZIc1luM2xFcmh4L2RLCkNzWlVOQU1aV3JMQVg5eDdhaHhwLzJoNTcrRjJqd3dac2pvMVEwaGVDcGd0aVJkU1ZRQzd6RUllM0RYOFNxUUUKckdXOUNLL3pVOXlGUEZGRjFRWFpCclQvV2RPWjNQUExpZi8rcXZnTHhYaWMyS0R1VkxnRTh6Y2hwTTRrMVhZbgozTGI2SWxhdndtcUdVQWU5a1NnYVZOK1UzNm04a1NTY3Nvc2MvZG5tMytsMFhIS3Y2Q05VbytxUk1FSlAyN3R3CnlwYzByLzRKbVNFUElxclFiLzN6VTltNlRDS3ppbmRkd3FvYStvNTdubjZkeU54RDJZNnEwb0NEOTNFOCtBZ1MKZ3RGK25LRUNnWUVBN1ovYW01Z3IxblJ4N1hKRkJoRlVud1R3OGRNcGN4YmJ6UGJGV1BpcnVCWnM1MitjMzdtVApKTngvSm5idW9vajZrRnAzQjM2NzJweGJONWdrZEhQNVFURWJ4aUFnUENnM1ZKaXB4aGo1d1l6azFyL29Xa0w0CnlkYzdtaVpvcTM3amsxcjUxZWZzTjhVaXpwVnVUWWsrc0hLcVlNeW90a29UanRGM1R5eFp1NGNDZ1lFQTZvQisKNzZMU0FlcERNc2hIYkZTWW5VTFVadGdBVlI0R1ZvRFNwMGtBSDJqWEtyaUFBb3FRYzNSQXQyRnZ2bGFJSlpmNQoxMk1qemJ1b3FieW9jb1NQSllrUk1PZnNqNDRRRnkzRURMU0xvMEpDbXgxSDJnb09YNkFDTFA2cGx0bktzdlpnCkRIUkNZOThzbE9hZ1ZMclkrelkyU0pUaHRyOU9wTzNCL2gwUno3OENnWUFaZEFJS29LWXhkbyt0aTR2eE5uSUcKQnBWNGtkSGl6aFFGUkhtbktodmF3Q3d5TGpaemtJRStkWS81SXN3MUJNOHlIejZZd3U2RVlETTFKVXJpWG5uWQpqZFlYeHVFdEVIRzgwZzE5ZHJkcUVCbURGMU5nTjhSR2VwT2IwM2xxeFZERE8vOSs5alRMVklhQjhtZTZUblUwCm1WTyt3cTFmdVZlVytNRDY3aGsraVFLQmdCUGw3VjkyS0czRExBcU9GZ2xxTUR6LzQ3Z0tVaFRtNUZESXc1Y3cKU1pOZ3VRbEYrSTYrcFQwMnV4c1VhSC8xSmI1UzQvOVR5VUQyMEh2K3B5aDRlUkVOVFdraDlOL0ZoVFlDU3lWcwoySUIwNmVQeG14dzBTRDN5L054R2k2dGlOYUh6NS9pR2tPK2FpMVRqTU8yZm9UUEh5TmxsMExWS0RHbFFSMnJCCm1yWlBBb0dBWkVlTUJKVndUbU0rOXZmME9Yc05XVCtEbkRyK3dzaW44MXFVcXJBbzIxMVRobEpTWnR6MUZ1Q0IKZ3dUVm0wTGpVM2pLK2M0MUdnTHk4MVFvUHFiM1ZWc1pBRDg1R3YvWnQyT2ZzTTkycllCakEyeVRKWlhxMTlzaAo5ekxGNXdsSXo0V2NFTjhjSVdsZXhINEp1MUt0RktBUE8wZk8vUkdJTGpyMXRkZHN6N3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRU1JjMCs3dXpEc0VIY1dCbFY5U3N3REFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qRTBNVFl4TlRFMFdoY05Nak14TWpFME1UWXhOVEUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURacTJPU285dnJXU3NkZ01qdVpSRjZhUzY3dEhVOGNST25GVzAzQWtmaApGTXVNd3VLT1E5c1Bub2UwRWVJZFBXUmg3UEY2dG9kTWhpMkNVbU1RbDRheTlBK0d2a1dSY0kxZGt2SnRUUjBlCndCK002RDlGbVZodXRVVTFlTDZzWFRPSlA5anpwMjBubDdHVXJTeE9LSUdiTkV1Ylc1RFNKMGtHY3llb1JIY3IKZTdUVHp3NzZMYmk5NkRqRGlNMk5nRXcxVDNmMFM4bFVhL3ZTWGlmVVgwOThlZTNoVEFGTEpYdE5PY2ZTcXJxSgpXZkEzRlI0REszY1UvNVlhQ0luL0puL24wbTZnVytpTlNWNDJOTnYrOHZPRm9McFFld01yTXpERGk2aTNlNVJrCmZ5WjFHQ1l1WUdGbm1HM1VZVVdidzMvNW1tbnBveGpEMUpGcy9CUmtqQks1QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFINDVZcWJ2Rkt5T2NleUVBZExOZDlCTHQ0YlMKK05EZGhnM24vWG56V2pyREN1USs0NityZVdQdzdmR0FkSU5mdlR3OHArQkZHdlYxZHJoRGV0VzVJVXF4dHhUYgpuUE4zQVFVSzBZa1VPV1lsV1c5b2srQ0JiN1djUXZIMzJKNW9lZi9Qcy90MWRzbFRlVEt4RnhvcVM5SVBpNzZJCnp1cjI5ZFAwVTVtU20zWmgxV3hlbUUwNWJUQkFISnFYMkhTeFhGWDEzRVVYYzlFSWphay8yRGhtb3lSNHQvdUoKcGhLZVFhblJ0eGp0Z2RUak50bG5rSG1hZHdtbUI0KzZxRHBLZnA5dmcxVXpqdjR3dHdiaHJLMHlWM2xkNzhPOAo4QUxYV2ZPUFdlL1h0NGV0c0Q2dW1RZUtsbXpJMzU5Z09UdzhqL21pbURqNmVuc2lYUE9FeHdhcjNndz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU1ncU0ydi8rU1o3eC8vRlVkc0toUHN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1UUXhOakUxTVRSYUZ3MHlNekV5TVRReE5qRTFNVFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFMxdXluZlNLM0pNcjA2TnhHdmpqVjRTelFmKzZSdTB1T01XdGU4TjQ5cUs1TgpNWCtxUzk5QnBId1VOeHpyNjJibWVtQVhFL0hqWjdCSWdhNUE4WDQ2SjY4cWsxMmRnWWJ5cldmVjRzS1FDbTNKCnpCU1VwN2JMbWRZY21FcHc0WTVuZ2NoYnFtWVo1b3M4YU1NKzhNcGxGbHJnRGdqZUNSWGtRcndCNG5ydTIrWlYKRTQzTTBVeHFYUEJqRm5xcTMrSG05Y0hPYlB5RVVOU21WTEM0VUp6d1BuOGJ4cXUyNnRWWjZWU0M3RzhKUCtGVQowbCszUHAwdWhBLzlkK3RwMUNOWEI3cUZkTkYyeXM5bndpTTluelhRWWx5ZzFhVzdqTFRKSC82SHgzTTRVc0FHClUwbzVMcUlDd2RQYjdNa2I4bzk3YWJvTlQ1cnp2M1BqK3dmY2Y4cC9BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURHdGRCZlNUUkU2RnZqU1NQcXI3YmFpcDVrbDBMd0t3b2MKNFFsSEFKZ1RqTmwwdHR6MEs5ZGNtZUZ4ZFBWSXFrSEppeVVyb2lYOEU0U2h5OXBBMHlmYXBkYXpBTFMxdkt4KwpSbGJvc3FQb3pTaVBvYVB4R09aWHIvOFlKYWw5bzM1N0lRc21HRzc3Z3ptb2lNa3B4RnpwWnV3MEF1M3dVYlg1ClhoNWU3cXRGRndYMnp0eGdQeFRmWTZMTi9vK01ObStPaXBpWVU5eVJBQmp1YWtyYmJvM05yOW00bG9FaWdsVU0KRDlVQmhCT3IzcDNRR1FRNG1Ld0xHSWx2b2RtazRwemFhcEJmQ29lSDFRbFIwNERVeCsrZWtDY0ttQkQ5VWg0TApVZ29ySkdseGNXNlk5a1Y4YVBvYjBIRk96VEZCT0F0RHd6eldncGM3cEw2RmxPd3pha1hGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMHRic3AzMGl0eVRLOU9qY1JyNDQxZUVzMEgvdWtidExqakZyWHZEZVBhaXVUVEYvCnFrdmZRYVI4RkRjYzYrdG01bnBnRnhQeDQyZXdTSUd1UVBGK09pZXZLcE5kbllHRzhxMW4xZUxDa0FwdHljd1UKbEtlMnk1bldISmhLY09HT1o0SElXNnBtR2VhTFBHakRQdkRLWlJaYTRBNEkzZ2tWNUVLOEFlSjY3dHZtVlJPTgp6TkZNYWx6d1l4WjZxdC9oNXZYQnptejhoRkRVcGxTd3VGQ2M4RDUvRzhhcnR1clZXZWxVZ3V4dkNUL2hWTkpmCnR6NmRMb1FQL1hmcmFkUWpWd2U2aFhUUmRzclBaOElqUFo4MTBHSmNvTldsdTR5MHlSLytoOGR6T0ZMQUJsTksKT1M2aUFzSFQyK3pKRy9LUGUybTZEVSthODc5ejQvc0gzSC9LZndJREFRQUJBb0lCQVFDdVF0T1F6MTJkRDd6cgoxWGNTeFhCR1hubGl6d3BJeXd2MHQ2WHQ3NWxRVHhYWldYc1NMdW1VNExWcEkvQTBrZmtYcjdleCsxc213SEcwClMvTFJYSWdlMnVQdGhhV1BaQm84ZzlSWnRMVm94aVhkNzE1blM0TkxIcGdZUkVycXA1TEN2RUwwZUk4eEF4cTcKMEQ3bnk2OE5CQUFTUmFkUWxTUFI2Tkpwb0Y1SkFsbDl2d0VMaXJvQ1RybHpIeVVHckpKNkhlL2hELzg0WHBGMQprcDZOTjR1U3hqL3U5TVJ5NXc1REh5bjZ6RFVpWlEyK0lUWEpmMWE3a0JmZkREQXM2SzJPMm8yT3VWM3N2T040CmJkaXBab2QxazIzT3c1UDJwWFVab3c5eHlCMU4yMlhrWENHbGUxVEVtK0V2by94MUNQcHpvdUJJNzVTV2c2VnoKb3VtcDJmbXBBb0dCQU9tc2tPQjNZUFlKYVF0UVo3bjY4c042UjViTFc2LzJHVUlwWWR4OC9LNjBhTTg2U3A4bQpTcmk3NkhPeWZRWjlQVUxnV3RCdVRSQmRkbVc3elNrTFQ0UytRb2ZvZGtuQUFxNTFkc2xjdnJGdXhneEZOTEpLCjNjQ1BLSkc5K3hjWHlud0F5ZVBWUU95TWR3QURpMk1aWmZYTWVmQi8yQWxZUkVFWUJCc1NlcE1MQW9HQkFPYjcKMlQzazFKMGRUZUdpRWdpZjJaRHZibTFDRVVGVEZJQWQ4WkVLakk5ZFhnNVhSQWRGODBXYkpaY1ozQUE1Yk05Qwp3Z1AxelF5UzNQWFdCa2VVVFZKWHk0WW4yU0VWOEQwRGJ6czgzL2IrZWRiNG9pdnJ5R1ZjSmxtcXlHWWpIQVBYCmpTbDBHZmo0WjNnRG9OL2xpSkpGRnIyTFhvcWQ4VVJDS0pKTWxNN2RBb0dCQUxydzBWNmlZckd5eVpUQm1Kb1QKQjFBWGJWcFlDbHYxV0RPMEE1UnZjWDhhMlphZm5iOUExUnFCU2UvMVpVeGh1VGJkWWduSmxHRjVSQlVUYjRoYwpnaHRDVXR1RHY4NDBqSENoakl4L1pCZHk5WUl2ZzM3M29meEJDMFc5WlRrT1VYRnUrQlVMTUV1Ti9FM0lpQ1NaCjF4WVRwYUlmeE9lRTgrWFhuc0ZCd1VvTkFvR0FaQzd0M1l1SHNCR0t1d2Q1Zk9ZZ0RsM2E3bWFPWjEvcWIxc04KY0ZRNy9ONkpNZjBsazJZQ2lya3RCNmwrbzFaRTNHeGZEQ3FyWWYyOCtwOTJuOHN4OGpvRUcwN2pQUmR2MkhiSgo0czZYY1dDVVplbjNKTWVpWmx3ZWdodXh5YU1HdnAvYUtSV2pRam96WG5sc2FFLzgrVHdnRGR3S0NHTlN4c0ZQCktZMHZxYjBDZ1lFQXRJdWJjWlhiajV6UnFJeGlaRUNuOTE4ZC96WmdQU3NxUWhNVXVrSlZzQ1pUNk8vb21ycG8KdXBvV0k5TGdQQ2V6THZseVE0SzMwVElsTlV1QkFvQkkxSzd5YUJJREhTNnFmdmVhQTU2Mi8vRUJ5c2p6OWNzTgptTzhHbGNheDdxSWU5Sk0yNVdzSlBxdzFQMWRWL1VHb1ZGQkxiS1dEVHU5VjRVUktSVGVoYVl3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU1ncU0ydi8rU1o3eC8vRlVkc0toUHN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1UUXhOakUxTVRSYUZ3MHlNekV5TVRReE5qRTFNVFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFMxdXluZlNLM0pNcjA2TnhHdmpqVjRTelFmKzZSdTB1T01XdGU4TjQ5cUs1TgpNWCtxUzk5QnBId1VOeHpyNjJibWVtQVhFL0hqWjdCSWdhNUE4WDQ2SjY4cWsxMmRnWWJ5cldmVjRzS1FDbTNKCnpCU1VwN2JMbWRZY21FcHc0WTVuZ2NoYnFtWVo1b3M4YU1NKzhNcGxGbHJnRGdqZUNSWGtRcndCNG5ydTIrWlYKRTQzTTBVeHFYUEJqRm5xcTMrSG05Y0hPYlB5RVVOU21WTEM0VUp6d1BuOGJ4cXUyNnRWWjZWU0M3RzhKUCtGVQowbCszUHAwdWhBLzlkK3RwMUNOWEI3cUZkTkYyeXM5bndpTTluelhRWWx5ZzFhVzdqTFRKSC82SHgzTTRVc0FHClUwbzVMcUlDd2RQYjdNa2I4bzk3YWJvTlQ1cnp2M1BqK3dmY2Y4cC9BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURHdGRCZlNUUkU2RnZqU1NQcXI3YmFpcDVrbDBMd0t3b2MKNFFsSEFKZ1RqTmwwdHR6MEs5ZGNtZUZ4ZFBWSXFrSEppeVVyb2lYOEU0U2h5OXBBMHlmYXBkYXpBTFMxdkt4KwpSbGJvc3FQb3pTaVBvYVB4R09aWHIvOFlKYWw5bzM1N0lRc21HRzc3Z3ptb2lNa3B4RnpwWnV3MEF1M3dVYlg1ClhoNWU3cXRGRndYMnp0eGdQeFRmWTZMTi9vK01ObStPaXBpWVU5eVJBQmp1YWtyYmJvM05yOW00bG9FaWdsVU0KRDlVQmhCT3IzcDNRR1FRNG1Ld0xHSWx2b2RtazRwemFhcEJmQ29lSDFRbFIwNERVeCsrZWtDY0ttQkQ5VWg0TApVZ29ySkdseGNXNlk5a1Y4YVBvYjBIRk96VEZCT0F0RHd6eldncGM3cEw2RmxPd3pha1hGCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEyMTQxNjE1MDNaFw0yMzEyMTQxNjE1MjNaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEDyTewa11TceLsd8gbSLklTUcAUpX8ULGs3wflrXMfQOF6DLP2d23kRP26Ytx
            iKZ7YyXPz+HjseDPsFLDHRlFK6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSK0ZdO5W9KOjJjbox/xW6resaILTAKBggqhkjOPQQDAgNIADBFAiEAlGMuoiYd
            0ymI9bEOSf8RFqxyEONeRFdY2PPDoEvgN6QCIC+zX8OoG124qQr2wkLW6XZ4/NxR
            nTPrb9aFeTmttFeE
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEyMTQxNjE1MDNaFw0yMzEyMTQxNjE1MjNaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEDyTewa11TceLsd8gbSLklTUcAUpX8ULGs3wflrXMfQOF6DLP2d23kRP26Ytx
      iKZ7YyXPz+HjseDPsFLDHRlFK6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSK0ZdO5W9KOjJjbox/xW6resaILTAKBggqhkjOPQQDAgNIADBFAiEAlGMuoiYd
      0ymI9bEOSf8RFqxyEONeRFdY2PPDoEvgN6QCIC+zX8OoG124qQr2wkLW6XZ4/NxR
      nTPrb9aFeTmttFeE
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: thetadr/linkerd-proxy
        pullPolicy: ""
        version: logs-linux
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TVRReE5qRTFNRE5hRncweU16RXlNVFF4TmpFMU1qTmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVEeVRld2ExMVRjZUxzZDhnYlNMa2xUVWNBVXBYOFVMR3Mzd2ZsclhNZlFPRjZETFAyZDIza1JQMjZZdHgKaUtaN1l5WFB6K0hqc2VEUHNGTERIUmxGSzZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU0swWmRPNVc5S09qSmpib3gveFc2cmVzYUlMVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBbEdNdW9pWWQKMHltSTliRU9TZjhSRnF4eUVPTmVSRmRZMlBQRG9FdmdONlFDSUMrelg4T29HMTI0cVFyMndrTFc2WFo0L054UgpuVFByYjlhRmVUbXR0RmVFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVvRmN2Z01JbDkrRkhxS283M0pFQ0lXcVpuQUNpaU9QL3ZsQlE2eXhFcmxvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRHlUZXdhMTFUY2VMc2Q4Z2JTTGtsVFVjQVVwWDhVTEdzM3dmbHJYTWZRT0Y2RExQMmQyMwprUlAyNll0eGlLWjdZeVhQeitIanNlRFBzRkxESFJsRkt3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEyMTQxNjE1MDNaFw0yMzEyMTQxNjE1MjNaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEDyTewa11TceLsd8gbSLklTUcAUpX8ULGs3wflrXMfQOF6DLP2d23kRP26Ytx
    iKZ7YyXPz+HjseDPsFLDHRlFK6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSK0ZdO5W9KOjJjbox/xW6resaILTAKBggqhkjOPQQDAgNIADBFAiEAlGMuoiYd
    0ymI9bEOSf8RFqxyEONeRFdY2PPDoEvgN6QCIC+zX8OoG124qQr2wkLW6XZ4/NxR
    nTPrb9aFeTmttFeE
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1ad4dce997c1684d62f4088a6829a84b88090fce4b376daa1084690c838ded4c
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1ad4dce997c1684d62f4088a6829a84b88090fce4b376daa1084690c838ded4c
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "25 16 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 1ad4dce997c1684d62f4088a6829a84b88090fce4b376daa1084690c838ded4c
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TVRReE5qRTFNRE5hRncweU16RXlNVFF4TmpFMU1qTmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFRHlUZXdhMTFUY2VMc2Q4Z2JTTGtsVFVjQVVwWDhVTEdzM3dmbHJYTWZRT0Y2RExQMmQyM2tSUDI2WXR4CiAgICAgICAgaUtaN1l5WFB6K0hqc2VEUHNGTERIUmxGSzZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNLMFpkTzVXOUtPakpqYm94L3hXNnJlc2FJTFRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQWxHTXVvaVlkCiAgICAgICAgMHltSTliRU9TZjhSRnF4eUVPTmVSRmRZMlBQRG9FdmdONlFDSUMrelg4T29HMTI0cVFyMndrTFc2WFo0L054UgogICAgICAgIG5UUHJiOWFGZVRtdHRGZUUKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUVvRmN2Z01JbDkrRkhxS283M0pFQ0lXcVpuQUNpaU9QL3ZsQlE2eXhFcmxvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVEeVRld2ExMVRjZUxzZDhnYlNMa2xUVWNBVXBYOFVMR3Mzd2ZsclhNZlFPRjZETFAyZDIzCiAgICAgICAga1JQMjZZdHhpS1o3WXlYUHorSGpzZURQc0ZMREhSbEZLdz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXlNVFF4TmpFMU1ETmFGdzB5TXpFeU1UUXhOakUxTWpOYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVEeVRld2ExMVRjZUxzZDhnYlNMa2xUVWNBVXBYOFVMR3Mzd2ZsclhNZlFPRjZETFAyZDIza1JQMjZZdHgKICBpS1o3WXlYUHorSGpzZURQc0ZMREhSbEZLNk5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCU0swWmRPNVc5S09qSmpib3gveFc2cmVzYUlMVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBbEdNdW9pWWQKICAweW1JOWJFT1NmOFJGcXh5RU9OZVJGZFkyUFBEb0V2Z042UUNJQyt6WDhPb0cxMjRxUXIyd2tMVzZYWjQvTnhSCiAgblRQcmI5YUZlVG10dEZlRQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
