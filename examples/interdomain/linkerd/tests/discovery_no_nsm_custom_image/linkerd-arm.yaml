---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBPcFJSNk1PRERjb3VHalhMcEh1Zmt3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpBMk1UVXhNVEF6V2hjTk1qTXhNakEyTVRVeE1UQXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5WSkkzbTdQUkdNTzJtdkQ3V0lSVUJScjFwV0h6R09TNUZJcHJCSStNQnV6U1dTb281dwp0RU8yeUFLZkFFMVhwQzhCL2VENklVckxLdEV2SkZLOTJaT09ZRzFscVdZNHZCK1d6eDhKR3NzQTczbVc0WmxjCmU2Qys2Q00yb1V3MGZsTFo1T0tqWlBSTDN3MXJTeVJ1U0xNMzJkN2hyVU1vWGhjaisvTmQvYnlvZWNJVjI3cWoKMDY4djM1VWQya2Y4dmdUZG9xVEtaTGZ5ekRzSkNxYVhXcW5NSDVPZDFEbUkwSWxNVXNXT1dHTzc2WFZLa2J6Qwo5aWc5R0xEbXY2Z3JvR1BoU1BpZWw3c0JvRzdZT1ZIdzdyd0VyUURScDJPRzdKRnZHUVQ0N1JDZnRhVi9WNTJSCkUyb0pKeWpkcVVndkRaRUJkWTNlaXVzanlBbG5XbHl3a0E4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBMDluS1EyOHRZRGM0Njl1eW1jR3dRWitNMGdTcEdRRS9nS0YrVjBhOHAKdWFQSmVuT2hSczVvQW1CUjhpNVYwUmFnZEFENjFzYTVYdW9KLzBJTjkvUE5OWk9WL0hIb2tFeGhuVi9FbXBZQQpqd1pNbTUzcTVqYWZhZFZNeURjazlCRHdQeEI4ZUJkSXoweVB1SlQ2SUVUZFgzVHhZc1ZRam5wSktseVNyZUhxCklQamNWRnNrazIyZjFyS0pQOWZBZm9DbmNlOExBQkdsRjFxUHArWkhUcVM4Sm9mVnpGc0YvenNqR0hZRHR6bC8KMGkyWHVSY25ld0NpbW94cXNHUXBGN1ErYmdpSEpVSzlHaG5NOWMvdzBtN2szWit1dTk5ZEZKRDJMYVBLWnlJbQpoY0hxc2t1VnBxUGlJcEh6OUN2emhzWStWc0FVYVQwNVk5WFZhR1JyMys5bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMVVramViczlFWXc3YWE4UHRZaEZRRkd2V2xZZk1ZNUxrVWltc0VqNHdHN05KWktpCmpuQzBRN2JJQXA4QVRWZWtMd0g5NFBvaFNzc3EwUzhrVXIzWms0NWdiV1dwWmppOEg1YlBId2theXdEdmVaYmgKbVZ4N29MN29JemFoVERSK1V0bms0cU5rOUV2ZkRXdExKRzVJc3pmWjN1R3RReWhlRnlQNzgxMzl2S2g1d2hYYgp1cVBUcnkvZmxSM2FSL3krQk4yaXBNcGt0L0xNT3drS3BwZGFxY3dmazUzVU9ZalFpVXhTeFk1WVk3dnBkVXFSCnZNTDJLRDBZc09hL3FDdWdZK0ZJK0o2WHV3R2didGc1VWZEdXZBU3RBTkduWTRic2tXOFpCUGp0RUorMXBYOVgKblpFVGFna25LTjJwU0M4TmtRRjFqZDZLNnlQSUNXZGFYTENRRHdJREFRQUJBb0lCQUc3OFl5aDZSWG4zSmdlRgpvRUFQakRHL0QrZUxQeW96YUtGT1UrY1I0ZGVKRU5tSFoyMkZ1bGd1S2dBckt5WVVBQXl5RmFGWHA3RmE3WW55CjVRemxXKzRMdmFQUHJnblNaaHB1Q0pPVzBrbG0wRGJPUzlEWkxqL2tkN216T05ZRnp1SmdIbG5OT3NCaEpzMjkKMGxrL3hqYjBUanhMNVRRNE1sWUtWSlk4aDhmK1ZFSzZNUjNRKzJmMytGc0RpdXFoMnV6YnFWaCtpN3ZRTkxxYgo5L2V6dEh2ZUhrQnUvay9pQ0FPajg1ckp5Rm1tUUhjVTlGeTF6clZkVXBRSit3RlI4SkhRcXdNUytxUHh3TzdDCnVsR2JmcmthOHk1TmZQeFdwa1U5RHljTjc0ZGI0SUVYV0xUYjFmbDYveVppQWxGbmVoMW5JQm9uN3lHdk9WcnMKZ0JRcS9nRUNnWUVBNjlIVnFORmNreTFkeXZZR3R4TmFkclNhWDhsdks5a0hpUEJveC9RNVRWdk1OY0V0S0h4QQpWUXE2d0R0TlJuejhOUFFoQUdPaWd4UUhOMFU3SW9nYmk1UHNwV1VXN1U3ZU9VSDlXVlREUHQrVjlabUp1ZVg4CnUyTVRuYWE3bk9aOWxyQlo0N1RKd3FobDJyN09WTTRwZzJDK3lnU2twSDdCVEt3UC9BVk8vd0VDZ1lFQTU0bWwKYlhEUmF3aGowQWg2TUVYOXRLU1ExV1MyMXVCQmNXQllWNkM0dndWVW9CQ1ozS09HY1hmTVFmcjhpSEdIRk5lMworVGFGRFFCL2FwUnJmZEFLeUV4MW9KenpiUllDNUg3SEg5Szh0WVlyRkVRK0NDQVhqWnlQY0syQ1lLMVRCeVdNCjZVWkkvS2dqVUFIVUhMTHdVbkhqc3dwa3Arc09uZmdoUXFxdW53OENnWUIrMU96RlQxVXJFMHRPemVQdXMwb0UKYmo1WkprM1VsM1dtQVNkWjQ5Q3QrcUZxaCt0eHl1SU8yeVoySFc4Q2FsWjdaSkliVTNza1pMRTgyTTlsVXk3OQpjeUhrRXVxeDE2bE53bUF3bTVZblNybXN6bGQwMUcySm0xQUJpcHQ5VjdwVVFhVVhBelZBckxHYlpPUTBXRzJiCmEzMHh5aTJEQzJtTGd6OVZuTVZRQVFLQmdGSWdZc3MwN3pNMTRLR1R3RE9MUC9ocFB1NVNNUUI2dnZ2R0hzL0cKTklHZEZHMUtOaWtxMzY4enZRSFNVdXpheC8wK253VUlyNXp6Qmo3NXNqOElJaXIxNCtzNmdLVzYzdi9KY0R2NwpkZkExVE9aOVpqdGZscnNtUTBMR2FLNStEQ3RHeUhxZDhabWMwaG00N0ZIWnJxQ3Z3UUpxdDFWUWJQamZZSHpUCktlbEZBb0dCQUtDb1hDUmR4WUVoOWdPOXUvOEFJTkQ1cXhwVDVDQnAvT1RxNHFNRXpEVzJVK1lXdERKUlB2QTAKekhUdFNSUEhHM0NIKysxTnNrWlFrcm92R1BMdGJoNjZpVEVENFV6SVl1Tk1Ia09oZHNvVjUzczRidmtsaGkxRQpOZUVXZ3FBSVNoRWtaM0VlVkhwWEpZRmtMSzhxVURoaDhFS2Y2UEw1N1dkb0RQdk1QNWdYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBPcFJSNk1PRERjb3VHalhMcEh1Zmt3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpBMk1UVXhNVEF6V2hjTk1qTXhNakEyTVRVeE1UQXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5WSkkzbTdQUkdNTzJtdkQ3V0lSVUJScjFwV0h6R09TNUZJcHJCSStNQnV6U1dTb281dwp0RU8yeUFLZkFFMVhwQzhCL2VENklVckxLdEV2SkZLOTJaT09ZRzFscVdZNHZCK1d6eDhKR3NzQTczbVc0WmxjCmU2Qys2Q00yb1V3MGZsTFo1T0tqWlBSTDN3MXJTeVJ1U0xNMzJkN2hyVU1vWGhjaisvTmQvYnlvZWNJVjI3cWoKMDY4djM1VWQya2Y4dmdUZG9xVEtaTGZ5ekRzSkNxYVhXcW5NSDVPZDFEbUkwSWxNVXNXT1dHTzc2WFZLa2J6Qwo5aWc5R0xEbXY2Z3JvR1BoU1BpZWw3c0JvRzdZT1ZIdzdyd0VyUURScDJPRzdKRnZHUVQ0N1JDZnRhVi9WNTJSCkUyb0pKeWpkcVVndkRaRUJkWTNlaXVzanlBbG5XbHl3a0E4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBMDluS1EyOHRZRGM0Njl1eW1jR3dRWitNMGdTcEdRRS9nS0YrVjBhOHAKdWFQSmVuT2hSczVvQW1CUjhpNVYwUmFnZEFENjFzYTVYdW9KLzBJTjkvUE5OWk9WL0hIb2tFeGhuVi9FbXBZQQpqd1pNbTUzcTVqYWZhZFZNeURjazlCRHdQeEI4ZUJkSXoweVB1SlQ2SUVUZFgzVHhZc1ZRam5wSktseVNyZUhxCklQamNWRnNrazIyZjFyS0pQOWZBZm9DbmNlOExBQkdsRjFxUHArWkhUcVM4Sm9mVnpGc0YvenNqR0hZRHR6bC8KMGkyWHVSY25ld0NpbW94cXNHUXBGN1ErYmdpSEpVSzlHaG5NOWMvdzBtN2szWit1dTk5ZEZKRDJMYVBLWnlJbQpoY0hxc2t1VnBxUGlJcEh6OUN2emhzWStWc0FVYVQwNVk5WFZhR1JyMys5bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRE5kRHRSQjI5S0k5L3JLcExzbnRqREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qQTJNVFV4TVRBeldoY05Nak14TWpBMk1UVXhNVEF6V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLTFBVWXJPVFc3V1BXaWlPMW05UERJa29ObWlENUtHQS8zT042cUVPZwpWVFB4TEFHMUdNKzhoTmFhd3FqcUhwVTR5NEVSNlVHeTg3ZEt3K2xtdEZwdGhwSEhsVjM3a1F1anRXdnBLOGFCCnRaL1FwTWZIajdXY214TVR1aFlCMGFFVldIdm9MeTAyd2ZFaWwzVUZDK1h3eUdXdkZKbDVUbXlJbzlDWUY2QjMKRnZGUXY4ZnN4WWU5SHlyRlpKT1dLM3p4VTViSnZsaHdFQ0lMbmtVZkp5Tkg4S2kwTW94UlhBMXlGdEJCY2ZKdwpPQ1J0Vi85elVnaDhpU1czekNUc1M0d0gwaFdPQlVZTlYvM0ZrTTVYV2lrTXZiY056dG9hN0JGSWE1dzFFcy9zCnRnZlFZWEJ2Sys3V09iM0tEUnVSRGFUZFBVcWcwYjNEYkhIVUY5V20xRGFIQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFMDl5a1VNY0VNWVRjZVdRRE5LZkRLdHJSMWsKeWpsLzl4aFg0M01jNHpaRjEvRTlCdmprbW1FUU84NlZOY2plUUhYc2ZWdUJxSmh5SzNtcHpqUFZCdzBndFlNdQpjTUVIN0ZiVFRtdDNlazRVYnc5V0ZhNUYxdzNnWkRxVTlza3VxSCswV1RQM0QwVVJkU01RNU5LVE9iTmxVbndWCjNVaW1LU3J6ODc4SHlXMXRlL3lJa0NkMkVQV2lvdmg1aVJ5Rm9BeUV5VDJCRVJqZUx3aEZ6M0VtbGNlc0tFT3IKMlA4SUdINi80Y1VDWlJhcXBwdVVsdHNYYkRMWE9EQktnN2NEVXkvNVE0akpCSzdva2c4cU0rZFJQUXBZWDljRwpOSkx5cktmR00vVzRsVVA1R01SRGsrVWE4WWdiZGRyUmNQb2VJKytUS3pqVXJrdHBqN2UzZXliMjNrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWl6MUdLemsxdTFqMW9vanRadlR3eUpLRFpvZytTaGdQOXpqZXFoRG9GVXo4U3dCCnRSalB2SVRXbXNLbzZoNlZPTXVCRWVsQnN2TzNTc1BwWnJSYWJZYVJ4NVZkKzVFTG83VnI2U3ZHZ2JXZjBLVEgKeDQrMW5Kc1RFN29XQWRHaEZWaDc2Qzh0TnNIeElwZDFCUXZsOE1obHJ4U1plVTVzaUtQUW1CZWdkeGJ4VUwvSAo3TVdIdlI4cXhXU1RsaXQ4OFZPV3liNVljQkFpQzU1Rkh5Y2pSL0NvdERLTVVWd05jaGJRUVhIeWNEZ2tiVmYvCmMxSUlmSWtsdDh3azdFdU1COUlWamdWR0RWZjl4WkRPVjFvcERMMjNEYzdhR3V3UlNHdWNOUkxQN0xZSDBHRncKYnl2dTFqbTl5ZzBia1EyazNUMUtvTkc5dzJ4eDFCZlZwdFEyaHdJREFRQUJBb0lCQUQvc0lQNVJRL1ZVajFsNAp5YnVVN2twbklBVFc4NC96blNMMEF4UjMrUkhMZnFYRkpURU9ERGh0dzdDZzFXbFlqQk90L0R3ZWhRQkFvSFpLCkpSU3M5MTVqeXRuUXR5dGYrODhpQUdGenpzcWFFMUtUbHZyWXpESWNzZFp0NHFGbWwwaTVka3UrQnN5bVcwaDEKbkxFZ3h1M3ZYbjhSdzBpZ2JCNXp0UE14blRHcGhlVThiQVhYUUZOd0V1K0VKT21zb1NCeUEzUUdLZmEwUGszcgpXbWVqSE0rK3J5M05vdzcwWHNPNklESDU2Vzc0d0gzdTFjd1RIRnBKcmJaZzdLc3NaQ3pTS05uSzBPeUZGazZzCmJ3UGlCclhNWmdjQWZaN1hjbDZGUHlDbHQrYkR4STdxU0laT1dzQ2xUcDhhemdER3FWQ1haR2xTcVNiZllDQWoKNzlDODE2RUNnWUVBejg3bDQ0QTNkc0h1Uk1NU0xnbFJZeXRWRGNVK21xcDVtSTRqaVlTOFBTczRJcEdGUi9EVAo1VVFoU3hodERXK0duYmwvcXF1aGp1UUhyTWVoSkMxZGJBWTlpemlZbGVrQnI5RTg3N3dEVUlZOGd5ZExoNFl2Cmp5S3hXNU1Hb3NUYTdTd1RKTVVHdFYyYzZhNEp1MjR4cUJubXA2blZ6aGZ5TG9BZUVoRzFaWEVDZ1lFQStRK3EKZGErMkZMUXI5dURRcmlYdWFnUUdhekZzMDVkNllYdmdwNGJ0amtYTE5JQ2l6ZkE4UjBNMTJnS3VjYmtsUlZhUQpTM1FURHo0RktRY2RiOXl0NmUxcDBua1BORVU1bURJOVkxUWFIWlBZcWNpQ2N6ZkJNMVp5VU41SE9ZUkZ3ZW8xCjBNMlVkdmp3ZENJNDZDRHNmZk8vVjRmd29Ea2F1WXNBbUwyZmYzY0NnWUJwUE1qMUJraVFUclBBaE4xZkRQNzMKYnNsYStPbTBYK0xHWEMwcEJseGh5ZEpheDBFczVvd1lqZ0VpUzVObWUzVTd5T1liWTJHa3dGd1dwdDQzT1BZWApyNjFaSk9jNCs5QUwzcld5WG85N0p3L2NCM2xiZjV2MEs4aVBySXh1djZ4eThhQWNQZDhnMS9DUDhzQWcrRFFUCmdsSnAxRHRmYkljTC8zdTdBTmJSTVFLQmdIVVdjbEtsYW5wTlFhWHNodTU0RXA5d2lQdjMzbXVTK1F1L1N4dzMKQ0pNc0tKM2tJNldoWFJVN2VhT21ReEJmdEMvbXhDdFV4R2tVQlNVR25VWXJmdTlNbDhWRStHcmdhSFV1bVVHTApGa1AxYjVSU0dWSEZVbVNxTFUvclQ1eXduSUxQY3NGWkJJVHgvMGo1bGJzN1R6TGZWb0wxKzUrM2VPTGxnRUJPClZSOTlBb0dCQUlZaWVzM21rSmNZUXBRaHJuZlB4S0hzT3h2Uk1pd0gzMVBrVURhM2lQZXlBOXpKSTRuOHFMSkIKdFF6NEsyb1NWMm1QZjRycUNXOUhHdS9jMU5tbjFLL28zTlIyVHpnQXR3T0hxcXJ1dDl4QWVaeWQ5akNlcnBYaAp2akMwUUdDTUdQT0hpb3hDYWJyUEdvYXk2YTJPUmIwYkxta01kbHRvQkRBZnE4eVY4OUZwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRE5kRHRSQjI5S0k5L3JLcExzbnRqREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qQTJNVFV4TVRBeldoY05Nak14TWpBMk1UVXhNVEF6V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLTFBVWXJPVFc3V1BXaWlPMW05UERJa29ObWlENUtHQS8zT042cUVPZwpWVFB4TEFHMUdNKzhoTmFhd3FqcUhwVTR5NEVSNlVHeTg3ZEt3K2xtdEZwdGhwSEhsVjM3a1F1anRXdnBLOGFCCnRaL1FwTWZIajdXY214TVR1aFlCMGFFVldIdm9MeTAyd2ZFaWwzVUZDK1h3eUdXdkZKbDVUbXlJbzlDWUY2QjMKRnZGUXY4ZnN4WWU5SHlyRlpKT1dLM3p4VTViSnZsaHdFQ0lMbmtVZkp5Tkg4S2kwTW94UlhBMXlGdEJCY2ZKdwpPQ1J0Vi85elVnaDhpU1czekNUc1M0d0gwaFdPQlVZTlYvM0ZrTTVYV2lrTXZiY056dG9hN0JGSWE1dzFFcy9zCnRnZlFZWEJ2Sys3V09iM0tEUnVSRGFUZFBVcWcwYjNEYkhIVUY5V20xRGFIQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFMDl5a1VNY0VNWVRjZVdRRE5LZkRLdHJSMWsKeWpsLzl4aFg0M01jNHpaRjEvRTlCdmprbW1FUU84NlZOY2plUUhYc2ZWdUJxSmh5SzNtcHpqUFZCdzBndFlNdQpjTUVIN0ZiVFRtdDNlazRVYnc5V0ZhNUYxdzNnWkRxVTlza3VxSCswV1RQM0QwVVJkU01RNU5LVE9iTmxVbndWCjNVaW1LU3J6ODc4SHlXMXRlL3lJa0NkMkVQV2lvdmg1aVJ5Rm9BeUV5VDJCRVJqZUx3aEZ6M0VtbGNlc0tFT3IKMlA4SUdINi80Y1VDWlJhcXBwdVVsdHNYYkRMWE9EQktnN2NEVXkvNVE0akpCSzdva2c4cU0rZFJQUXBZWDljRwpOSkx5cktmR00vVzRsVVA1R01SRGsrVWE4WWdiZGRyUmNQb2VJKytUS3pqVXJrdHBqN2UzZXliMjNrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQVBFMlpjQWMvaGYyZFJaR1pXR0YvNTB3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1EWXhOVEV4TUROYUZ3MHlNekV5TURZeE5URXhNRE5hTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREVpaVg2Mm1CaGR3aGdGVFJ4T3h6ZnRZSVZmTXJkL3ZoUWk0MjFmVDVITFpGcgpkY2FybGZYODdQSXlHTXl3dDczdFVQOTl5aEdUbGtCRlVkOU45Z0NWNVQ2cUZiWnFXT3hFSE5rS05zaWVLOWhvCklwNFQvMWM0M0FEVUNKK2x4YVpoZC8vOEdZQm1mUzVlMitRMmJSdWdGaXNZRHh0bHFpSmloQW5pWFhFZmUwSTkKWU1qa0FaTktHNXZqb0FaVjFwRUlDV1hpV01wMXM2N1UvREZKODVmOXliN0RFTzREVGo4S2gvNlJ0dHBkRUN1YgpKMHllQjV2SFUxNVh5SWo1bGJOcFo2QWZyMjEwWGY2US9uMkNWNTZFUDFQUEdZQWFBZnBUQlUrQTFqQVVZL2JICmJrOGtmOURDMmd1Q1BqTUtYM2d1K2c0YjdSdGpJelJyRU42b2FGUVBBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFROGhMSFl5dHpsWGRORlpDcmNwSjM5K1E1ZnoraDI0dlAKSlhVMjJvRlZpdU5UTTArSURxem9jMmlPZ05DbjZtWHA3VXZBM2hZTWhzSHcwOFc5VEJzakIxTlVpNml0OUk4OQpod3ZMeENhWWpIcTRzNi9qR2loVGNiODNtSHdObElsWFZmQ09kK0pqVk82MHJMYUkvOFBGZnhWWTJJRlhrNFZBCm8wLzhhR3Ztb0o4RmFtZXhqMGRiRGNsR3QxSWtUc1FsWHU3MXRkcXFqZkZFem54T2JUbVFwaHo1SE5ONzdTM2EKS1RqUEs5TVAzdC9uQksyQXJtRXp2QTV1c2V1bU1qNU5GVXJNMTFIaU5BcVl6QjBaZTVhVW41a2pWQzk4QUwwaQo0bjNQRzUwZ2cvZ2N5azZoN0Z4TTBOTEF0TE1jbzR1alpPU0hHZTR3WHdLRFdETlZLeGRiCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeElvbCt0cGdZWGNJWUJVMGNUc2MzN1dDRlh6SzNmNzRVSXVOdFgwK1J5MlJhM1hHCnE1WDEvT3p5TWhqTXNMZTk3VkQvZmNvUms1WkFSVkhmVGZZQWxlVStxaFcyYWxqc1JCelpDamJJbml2WWFDS2UKRS85WE9Od0ExQWlmcGNXbVlYZi8vQm1BWm4wdVh0dmtObTBib0JZckdBOGJaYW9pWW9RSjRsMXhIM3RDUFdESQo1QUdUU2h1YjQ2QUdWZGFSQ0FsbDRsaktkYk91MVB3eFNmT1gvY20rd3hEdUEwNC9Db2Yra2JiYVhSQXJteWRNCm5nZWJ4MU5lVjhpSStaV3phV2VnSDY5dGRGMytrUDU5Z2xlZWhEOVR6eG1BR2dINlV3VlBnTll3RkdQMngyNVAKSkgvUXd0b0xnajR6Q2w5NEx2b09HKzBiWXlNMGF4RGVxR2hVRHdJREFRQUJBb0lCQUVDbzFvL3Q4bEYrY01IegpsL284b1dZejkrVUwxazRzeVJMdXBxTnozZDVhN29HMUVMUjR0S0lPYml2dkhzQnc0c3BGb0ppSXR6bWY3K3NlCllXSHJzZ3VlalB3MkFucUFZTktUencvZU1DaGhjbVBvSjZ1YWtONkMrcjdIUzRhbFBQVEtIdXlZa3pha3JuSEUKMUJMWDJJUFZaejRXRWtSak1jYkplOXIrTk81TzhSOWJkUHlRaVZaRVFyeFZnaW9ra3FZYUhoazJBSER5OUhucgpoQlFJdEFFRmVHMzlPSGtNTDdPR1FyTzE1cnVmaG9pcjhoenJNOWdTWjlEalNyQlRmSjJDRnRYMXhKa1cvczF2CjRzR0dKUG9KdmErdWU0WWViTFpEUWZFMEJta1Zscll6OVZFRWUxalRLS3p4Q3d2SXRQQkhIaFVrYzlDOXVTVm4KNzZXVnVNa0NnWUVBL2pHalBsenYxV3RJZ0ZmZmJNbEVMRkZycXI0UE4vVEZmYzBFbUpyVmNOMTFxYmw4S3VOZgpxSFpybmVqYlVqQ3A3Qkd0b3NhZEJXZmgxVTRsaVpnck5vQ0VkZm53M3FQMVkxR1hPM012eXVPa2VSNE1RSVdRCjhtNkNtS1JCZUJISHF1dEZLVFNMWExTdjVwUW1TQ0pDRDJGVFVZc3pIbWNxYlUrY1NDVXd3b01DZ1lFQXhlK2sKTFBwTEdrdGdBZ1hzODlaMll3VHlic1RUTUJZbU5HU0xGaUYxelE4TUU4THplRTdWNVExMDBhdC9oVUljMG1oQwpqTmszcEZVaWI5QzNBbFJqamZ2TEM4QlF5RjJaUnIyR2IxemhHbmtlSU8zUk51M1ArTDc2d0RaYThxekJPWVNyCm5odHY4VzhDVUxleGY2NWFzTk91cWVXK3FyTTN2aitNbTJMa3dvVUNnWUVBdGtXOXV2QkZnaEhsOFRJUm9oNUkKWmtjVUgyRWQ1SS8rTlpFWHBKNFNRMVpxRXdSUWh5aDM1WUxVOUd5UEtFYUE4aWhUREEvRGRLYmpCMk44QTBnOApaRjZQblZGV2FTL0V2QzA3ZG9QSVY0SVk1RWlwbkhLcVYwenJGSzFqek1kakY2cVE4MVVjUWFQSEpsNUJmU1FqCm5vZTVpUlY1MkdrOXdSaC9CalMwM0NVQ2dZRUFuWFpPL1JrQXRpSlFka3VRZlVxWFU1NlQzbHJtUnRMWUFjWWEKZjdpT3BscmFHTDUyUWJjMW9jcGFySkhxR0hESHpQcjBObWgzUTF3VzBTMFE2ZUdJY1dObDNDdGFHSXVkYkJGSgo2VDNTTmVVMGVxMjJTaVJWMW1UWHhpRjNxS2FWOE5RQ1V2MHd5TGl1OXRlcmRRK1hSaVNnUnJobVBoWGt1b3lECnB2bTlVcUVDZ1lCRmlBTHk0S0swK0FYNlBZTkZ0K1RzSXJucGh5aFJQOTRZSnBVbkR2d1BFcmVWZFYyVGpGSFgKeGhtOXpYRlc0Slh5NFJ6bG9RY2V1NEprRitjYkNiR0RzVnpCSVNrSWltYzE5eUplQnNoWjNkUm9rNjl3UXhvNQpiSnk1bVI3K2FKU0NPRHRQNEphN0xtSEl6WmRSbElJUEltYTJrQ3MrVWxSQ0FOY0Q4WlhWYlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQVBFMlpjQWMvaGYyZFJaR1pXR0YvNTB3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1EWXhOVEV4TUROYUZ3MHlNekV5TURZeE5URXhNRE5hTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREVpaVg2Mm1CaGR3aGdGVFJ4T3h6ZnRZSVZmTXJkL3ZoUWk0MjFmVDVITFpGcgpkY2FybGZYODdQSXlHTXl3dDczdFVQOTl5aEdUbGtCRlVkOU45Z0NWNVQ2cUZiWnFXT3hFSE5rS05zaWVLOWhvCklwNFQvMWM0M0FEVUNKK2x4YVpoZC8vOEdZQm1mUzVlMitRMmJSdWdGaXNZRHh0bHFpSmloQW5pWFhFZmUwSTkKWU1qa0FaTktHNXZqb0FaVjFwRUlDV1hpV01wMXM2N1UvREZKODVmOXliN0RFTzREVGo4S2gvNlJ0dHBkRUN1YgpKMHllQjV2SFUxNVh5SWo1bGJOcFo2QWZyMjEwWGY2US9uMkNWNTZFUDFQUEdZQWFBZnBUQlUrQTFqQVVZL2JICmJrOGtmOURDMmd1Q1BqTUtYM2d1K2c0YjdSdGpJelJyRU42b2FGUVBBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFROGhMSFl5dHpsWGRORlpDcmNwSjM5K1E1ZnoraDI0dlAKSlhVMjJvRlZpdU5UTTArSURxem9jMmlPZ05DbjZtWHA3VXZBM2hZTWhzSHcwOFc5VEJzakIxTlVpNml0OUk4OQpod3ZMeENhWWpIcTRzNi9qR2loVGNiODNtSHdObElsWFZmQ09kK0pqVk82MHJMYUkvOFBGZnhWWTJJRlhrNFZBCm8wLzhhR3Ztb0o4RmFtZXhqMGRiRGNsR3QxSWtUc1FsWHU3MXRkcXFqZkZFem54T2JUbVFwaHo1SE5ONzdTM2EKS1RqUEs5TVAzdC9uQksyQXJtRXp2QTV1c2V1bU1qNU5GVXJNMTFIaU5BcVl6QjBaZTVhVW41a2pWQzk4QUwwaQo0bjNQRzUwZ2cvZ2N5azZoN0Z4TTBOTEF0TE1jbzR1alpPU0hHZTR3WHdLRFdETlZLeGRiCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEyMDYxNTEwNTNaFw0yMzEyMDYxNTExMTNaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE+bahdmX0YXPTY1Ew0gXwelVhuvI/9+7C5kPUKxW+sXoTbZ2DgwuVaVKTcJyD
            ikszBNbT723P2er9JFHnkfJeGaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTkUSJPhRtZW9S6FlENyXcXMvvfJDAKBggqhkjOPQQDAgNIADBFAiA6vG68xr6q
            B5WvGSzZIVSXdzD8nYRY3qr0+vLpWC5RBgIhAK5v5igQT1Vr3SIIRXBpJLO/8/HF
            Foi0GxLjCRXIAkgw
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEyMDYxNTEwNTNaFw0yMzEyMDYxNTExMTNaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAE+bahdmX0YXPTY1Ew0gXwelVhuvI/9+7C5kPUKxW+sXoTbZ2DgwuVaVKTcJyD
      ikszBNbT723P2er9JFHnkfJeGaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTkUSJPhRtZW9S6FlENyXcXMvvfJDAKBggqhkjOPQQDAgNIADBFAiA6vG68xr6q
      B5WvGSzZIVSXdzD8nYRY3qr0+vLpWC5RBgIhAK5v5igQT1Vr3SIIRXBpJLO/8/HF
      Foi0GxLjCRXIAkgw
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: thetadr/linkerd-proxy
        pullPolicy: ""
        version: logs-arm
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TURZeE5URXdOVE5hRncweU16RXlNRFl4TlRFeE1UTmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUUrYmFoZG1YMFlYUFRZMUV3MGdYd2VsVmh1dkkvOSs3QzVrUFVLeFcrc1hvVGJaMkRnd3VWYVZLVGNKeUQKaWtzekJOYlQ3MjNQMmVyOUpGSG5rZkplR2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVGtVU0pQaFJ0Wlc5UzZGbEVOeVhjWE12dmZKREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUE2dkc2OHhyNnEKQjVXdkdTelpJVlNYZHpEOG5ZUlkzcXIwK3ZMcFdDNVJCZ0loQUs1djVpZ1FUMVZyM1NJSVJYQnBKTE8vOC9IRgpGb2kwR3hMakNSWElBa2d3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFKdVN6WnBHaUpBMVBOWnVrNUcxaERVVTNjbTV6WXRGZXl3c1BIc0FORCtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFK2JhaGRtWDBZWFBUWTFFdzBnWHdlbFZodXZJLzkrN0M1a1BVS3hXK3NYb1RiWjJEZ3d1VgphVktUY0p5RGlrc3pCTmJUNzIzUDJlcjlKRkhua2ZKZUdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEyMDYxNTEwNTNaFw0yMzEyMDYxNTExMTNaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAE+bahdmX0YXPTY1Ew0gXwelVhuvI/9+7C5kPUKxW+sXoTbZ2DgwuVaVKTcJyD
    ikszBNbT723P2er9JFHnkfJeGaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTkUSJPhRtZW9S6FlENyXcXMvvfJDAKBggqhkjOPQQDAgNIADBFAiA6vG68xr6q
    B5WvGSzZIVSXdzD8nYRY3qr0+vLpWC5RBgIhAK5v5igQT1Vr3SIIRXBpJLO/8/HF
    Foi0GxLjCRXIAkgw
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 686605d3d32facb33fe512934b0b9aeca733a2fc37c383a646e58a83d6036da1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 686605d3d32facb33fe512934b0b9aeca733a2fc37c383a646e58a83d6036da1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "21 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 686605d3d32facb33fe512934b0b9aeca733a2fc37c383a646e58a83d6036da1
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TURZeE5URXdOVE5hRncweU16RXlNRFl4TlRFeE1UTmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFK2JhaGRtWDBZWFBUWTFFdzBnWHdlbFZodXZJLzkrN0M1a1BVS3hXK3NYb1RiWjJEZ3d1VmFWS1RjSnlECiAgICAgICAgaWtzekJOYlQ3MjNQMmVyOUpGSG5rZkplR2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRrVVNKUGhSdFpXOVM2RmxFTnlYY1hNdnZmSkRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlBNnZHNjh4cjZxCiAgICAgICAgQjVXdkdTelpJVlNYZHpEOG5ZUlkzcXIwK3ZMcFdDNVJCZ0loQUs1djVpZ1FUMVZyM1NJSVJYQnBKTE8vOC9IRgogICAgICAgIEZvaTBHeExqQ1JYSUFrZ3cKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUFKdVN6WnBHaUpBMVBOWnVrNUcxaERVVTNjbTV6WXRGZXl3c1BIc0FORCtvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUUrYmFoZG1YMFlYUFRZMUV3MGdYd2VsVmh1dkkvOSs3QzVrUFVLeFcrc1hvVGJaMkRnd3VWCiAgICAgICAgYVZLVGNKeURpa3N6Qk5iVDcyM1AyZXI5SkZIbmtmSmVHUT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXlNRFl4TlRFd05UTmFGdzB5TXpFeU1EWXhOVEV4TVROYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUUrYmFoZG1YMFlYUFRZMUV3MGdYd2VsVmh1dkkvOSs3QzVrUFVLeFcrc1hvVGJaMkRnd3VWYVZLVGNKeUQKICBpa3N6Qk5iVDcyM1AyZXI5SkZIbmtmSmVHYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVGtVU0pQaFJ0Wlc5UzZGbEVOeVhjWE12dmZKREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUE2dkc2OHhyNnEKICBCNVd2R1N6WklWU1hkekQ4bllSWTNxcjArdkxwV0M1UkJnSWhBSzV2NWlnUVQxVnIzU0lJUlhCcEpMTy84L0hGCiAgRm9pMEd4TGpDUlhJQWtndwogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
