---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRUG5la0tSbUdQUitNclBpUUQxaGx5ekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV5TURrd09UVXhNelZhRncweU16RXlNRGt3T1RVeE16VmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdHprZ2NXbEQwTEpKeE11Y00rV0F2K3J3ZEQ1UmFzbUd0N0h2TlJzZm5qYldqVWhNdmJlSwpmRjBxYStTYmpKYlYxbWlDWTVCVHFyQWt4YlRxTHdEY2g2OUxHVE9WOFB3WWtSdnV1MzI0dnZJSzFUNUgyT0IxCnZlcHZGUkFQdUlDUFhYNEFBQlJjQlRPdFZjd2tKaHBhZHBjZFd0YW1SblUrVk1qZm05cGFEd25uN0RKUjVIQmoKM2k0bUM2dXI4OE9pSXJ1aExIVllRS0tya0s0czNoRnVxVzJEazNWNHdCa2IrQ1R6ZUNTcGRCYllqVnhmRTE3YwpCNERtbnNkb1NSVm1wWnpLV0JTSHRYYzlxQ1ZySTFZVlpzMVM2WkRmbUFzaFd5SE1ZWWQ4QnMySm5mSGJpSjhYCk51alVwTlRFdzQ5Q1gzSDVNVXVkY0d2eFg1cDUyNlB4SndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUd3dFN0L3pOd1creFZZcEpmWGRsUm4rcDlGdnV4L3hmVDBGMnNPVnMzeisKUlA2UjZvK0tabGFYWDhuUk9pdHRzODhqdi8zV3h4OGlBbEdnZzJHR3BiYWtWWDl3MWs1U1huMkNxSklxcnZuMgpEV1pRWmgwcXd4dFVNSm9kalh2bndPQ2tScTVxZ05CVzJ1VXJGaUxlakRaRDBMM1hrNGgxdkhCN0tFc0luSHdCCk1VU1hkVW9Ma1h3aFFRYTU0V1crZzZoamxkK1p3YUcwa0Y1Sk41YjQyVnBGRnR3d3lqK1JreUpNOVZZeTEyTVcKb2toazZST0pTbUdVYm4zZXFuZzdaMXp0bGJCb0ZRUFRGL1lITHNsN3J3UGVZeHpYaTlMUVM5Zms3OWRKaloxUwpVNUtIOUR1ekpldVJjN3RBNFBXY0JseWEyRnpsN2RLOXVlT21nT2hZMnFZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHprZ2NXbEQwTEpKeE11Y00rV0F2K3J3ZEQ1UmFzbUd0N0h2TlJzZm5qYldqVWhNCnZiZUtmRjBxYStTYmpKYlYxbWlDWTVCVHFyQWt4YlRxTHdEY2g2OUxHVE9WOFB3WWtSdnV1MzI0dnZJSzFUNUgKMk9CMXZlcHZGUkFQdUlDUFhYNEFBQlJjQlRPdFZjd2tKaHBhZHBjZFd0YW1SblUrVk1qZm05cGFEd25uN0RKUgo1SEJqM2k0bUM2dXI4OE9pSXJ1aExIVllRS0tya0s0czNoRnVxVzJEazNWNHdCa2IrQ1R6ZUNTcGRCYllqVnhmCkUxN2NCNERtbnNkb1NSVm1wWnpLV0JTSHRYYzlxQ1ZySTFZVlpzMVM2WkRmbUFzaFd5SE1ZWWQ4QnMySm5mSGIKaUo4WE51alVwTlRFdzQ5Q1gzSDVNVXVkY0d2eFg1cDUyNlB4SndJREFRQUJBb0lCQUYzNzFyRjJEb3d4dC9kVApmZ2Q4MVFNYzcwU2hac0FCS2JKMmVqNWljR0NHdnAxd0ZiVkhQYWszWFBoRkpxa0NBaVJlTFd3RzczUGhzS3NkCmR2YXZXVy9jTWdoMlZwWnJxZXBkU3FNd0JTRWxKUHRuWEJGYWFlc0dJdjdKNDFaLzA0cGdoSDJGOUFIVEZUbXEKWW15TkhoUXd4YVQvOEFDNlNVUFNXaWttNHdWTTdzVC9hWWVSMEhLQ1haUVR2YWJ1ZzhRaXM2VzNRV0VjSXljYQphS1pGSFgrZWJnZ3dQSDR3WUJqbmFqK2ZJdzZnN0FVRVd5SmhOSGFxaHBxaC9GSjdISHRqd2JRUFA1ZXhraW1YCkRJM2o5cTRocjZwRS9zV0dXcVp0cFV3d01wN3MvNUc0Q2FpaTFvZjJ1cGhzN0hrM1E1MUwyYWR2Y3kweEhBb3UKYUhCdk9sRUNnWUVBODhVcTBqeUhJNTF2NUMranBwQ0xYRzNyMDQvNFZseGJmZFhna0ZXT1ZvUk5ycWNOY2dXTQpreDRrbmVZN3NTU0xOY1Z6UUZXYnlyci9ocE5nTU9qVm9PR1FjZTZKVWc5enkwaWxoUUNIeVJlZktzS2FJQjhzCmVjY2ZDKzF5czZZeHpjSXFrWTFZWDRLQitzeWVqT2JCK1ZERWxTUUUwUUliMHU2cXBrWVNmVmtDZ1lFQXdHcFUKdkUydkJtdXZ5NXQ5ZU9XNFdzUFZQQVZUMHQxM1U5ZUg4U0lGWG9UZzIxSzQyVWtkTU0xMGhwYTBaYWk2SnZOZwpFMjFWMkJKWE1Vc3RDMCtYWktzVGdNQlppYzN3VGFMWXhsbkF6cVoyZnNDbUVJd1RCZUQzdUMxUE5UeFRLRUZlClArNlY1aXlUUGtlN2ZDRzB4KzRJK0xhcEdUUFJoNTY1UEc1emtuOENnWUFxV1BFMGJwRm5iWDAzbmRNSEo0c2UKTm5aR1hYZGR3Vk9maTUwa1ZjaVJYUkNGcTcyWk5qK1NleVVQVFNUSGhEcXV6NnRTM014Z3JwV2ZVbERlamtRMgpXNWtWUWNRWFBsbjJVWnQzZkgwYVFRRkVrMlBrK3FWbVRtSWxWMDJheWQ5VENFME8xZ2dwSjJuZklOYldVV3dYCkhLSFo2dFR2WGpkcE1FN3k3YTllbVFLQmdIRFNLQXNkVmFIakpIbXpHemYzSWtoK0NScWZXUTRMOHpyQzVwKzUKdmdJMDBZOW9DcURGSVF1TGZHYXFHTzUrcDEvTlZpa3Q4NmEwNGxFeDdpQnlzNmRBTkRoTEVIVWZ2bVlYTlJuZwphSkFDeFBuL1JaL3dNZnRCZEo2V1dwb3hXK1QvcHg2L2F6OUNKYmZmNFl1Z1M5cnF0SEg0MEYvSnBYTHEyMXdXCnUwZExBb0dBZGJNZklzZWRkZ1NYaG9TRGU1UW9aUUt3cWtJTk0zNGs1QS9VamNaVkh3eVNrZi9RdlFMdGtwTi8KRU1CMmFnVXNGakNDL2VFcHorYlV3dUh3V0tkN3JSWDhVdzJtUkJHMXE2aHFYd3U0QmRjWFJObDdPL0tBNjBEZQpTSitaVFZEVDNySkQ2Ty9WWTZESVJzcW1hNnhONDkvYzhYV3lnUytORDRsbk9TcTdMZ2s9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRUG5la0tSbUdQUitNclBpUUQxaGx5ekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV5TURrd09UVXhNelZhRncweU16RXlNRGt3T1RVeE16VmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdHprZ2NXbEQwTEpKeE11Y00rV0F2K3J3ZEQ1UmFzbUd0N0h2TlJzZm5qYldqVWhNdmJlSwpmRjBxYStTYmpKYlYxbWlDWTVCVHFyQWt4YlRxTHdEY2g2OUxHVE9WOFB3WWtSdnV1MzI0dnZJSzFUNUgyT0IxCnZlcHZGUkFQdUlDUFhYNEFBQlJjQlRPdFZjd2tKaHBhZHBjZFd0YW1SblUrVk1qZm05cGFEd25uN0RKUjVIQmoKM2k0bUM2dXI4OE9pSXJ1aExIVllRS0tya0s0czNoRnVxVzJEazNWNHdCa2IrQ1R6ZUNTcGRCYllqVnhmRTE3YwpCNERtbnNkb1NSVm1wWnpLV0JTSHRYYzlxQ1ZySTFZVlpzMVM2WkRmbUFzaFd5SE1ZWWQ4QnMySm5mSGJpSjhYCk51alVwTlRFdzQ5Q1gzSDVNVXVkY0d2eFg1cDUyNlB4SndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUd3dFN0L3pOd1creFZZcEpmWGRsUm4rcDlGdnV4L3hmVDBGMnNPVnMzeisKUlA2UjZvK0tabGFYWDhuUk9pdHRzODhqdi8zV3h4OGlBbEdnZzJHR3BiYWtWWDl3MWs1U1huMkNxSklxcnZuMgpEV1pRWmgwcXd4dFVNSm9kalh2bndPQ2tScTVxZ05CVzJ1VXJGaUxlakRaRDBMM1hrNGgxdkhCN0tFc0luSHdCCk1VU1hkVW9Ma1h3aFFRYTU0V1crZzZoamxkK1p3YUcwa0Y1Sk41YjQyVnBGRnR3d3lqK1JreUpNOVZZeTEyTVcKb2toazZST0pTbUdVYm4zZXFuZzdaMXp0bGJCb0ZRUFRGL1lITHNsN3J3UGVZeHpYaTlMUVM5Zms3OWRKaloxUwpVNUtIOUR1ekpldVJjN3RBNFBXY0JseWEyRnpsN2RLOXVlT21nT2hZMnFZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUpnNFFvVXQwQVh4L3ppVmFWcnFoeGN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1USXdPVEE1TlRFek5Wb1hEVEl6TVRJd09UQTVOVEV6TlZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb0pNdzRVb1JlV05aQTUvYXN3N29Qb2tBRkxQSFcycTNiampjaGFDaQpjVXdTc2wvY29GZExCd01sSWFGUGVFYUxnZU9PZG5KRzJnQms2Z0lCeUtNZkZnamFRM2kxZzNLcStlZ3RSQzRkCnhMb05TL3BkOVNna3FVQ081Z0M2bHJQeG03RzFpSVQweDlqRkIvbHdKQkdzTW93SENkS2U2Zkl4Z1ZZczBzekgKbFVxMmk0T0NzTjBZOGlrcjY0WFY1Y3liWXpiL05xanVVK1NrQ1lBU0RiNHBjL29Xc2hWVTFubjh3bDVXYnZtKwpNaTBtVmkvdEJ6N0h1cElqY0xudHR3dWdCZm9WVjJYMHZVdDdJZWlRS3VtdkZaTTZ2cm0zU0wydXpmd0c2OGhyCktnUzVhSmYxZ2orZkk3TlJZcDQ5bDZtbXpFU1F5bW1ZclR3RUxHcEYxZ05uZndJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1U3dWEwald4MktrYm1FUjJ1cEpCbE1EbXEKclBDSld4bWkxSVlIRVc4eUFYNlJ4b0p5WG1uMk1MTUhQdy9SSmNYZ1RpSVM3aHRRYWdsRU9Gd3cxbEF5MzJ0NQpDUlVvTVp3ZjNwWHZFMHBnZTRCVVVxd0lGT2ZLOUxYR3RvTG51bGRtUXhRVWhOWUQ2Z0haZW9ZL3ovWUpJenV3CkR1Z2JCckxLcHlQUVA2dnNqU2FJNHhIYUpINGdJb2poWDBQRHFqTmcySlhHSFZMWmRZNmlaT21UNE8vNjRVRmQKMVFNSFQ2U1prZjh0Z2ptZUFlcXcvcXA5ZndsRkVVdFdnbDd5NGdUNUFBaWpHT1VlUWZWSG13U3NhODJpMG9KVQpkUjJzK0JtQ1NlWTU3OWdIQzVSOXJRa1JPbDlpUUZuWCtVeXQ3ZnhyT3JWN2tzSWpIOG5CMHFqL2VMUk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBb0pNdzRVb1JlV05aQTUvYXN3N29Qb2tBRkxQSFcycTNiampjaGFDaWNVd1NzbC9jCm9GZExCd01sSWFGUGVFYUxnZU9PZG5KRzJnQms2Z0lCeUtNZkZnamFRM2kxZzNLcStlZ3RSQzRkeExvTlMvcGQKOVNna3FVQ081Z0M2bHJQeG03RzFpSVQweDlqRkIvbHdKQkdzTW93SENkS2U2Zkl4Z1ZZczBzekhsVXEyaTRPQwpzTjBZOGlrcjY0WFY1Y3liWXpiL05xanVVK1NrQ1lBU0RiNHBjL29Xc2hWVTFubjh3bDVXYnZtK01pMG1WaS90CkJ6N0h1cElqY0xudHR3dWdCZm9WVjJYMHZVdDdJZWlRS3VtdkZaTTZ2cm0zU0wydXpmd0c2OGhyS2dTNWFKZjEKZ2orZkk3TlJZcDQ5bDZtbXpFU1F5bW1ZclR3RUxHcEYxZ05uZndJREFRQUJBb0lCQVFDQzl3b0s5YXBDNHpDYQpzQ3BqbUdqN2VDbkV1TXlFVndtOHNFdk1BVFA4VEJ1RHVJUHRrc1R5dHpIMXQrZGxKY1JxNy9vbHlSYllmekhQCldrdXlKTGtaODZaeEdXYVNDMWcvODRuWDdmVUJtdTExWm9KempZWTVOUnBYcFlpSm1jSVpSbHZWT1B1Y2M4UmYKdUtZcUJPLzVXaFB6Z3dGeHRjT0N4WkpSYkF2c1NuVFA5Q0htS0Y1QjBhODJtck54WG5KbjdBYzhPSjhBM0g3dQpPVnNtWXdPNzJwcnV4U0Y3R253OE82bERDMzM4WDByUUFWQTNUTUtubHZsY05aYVYxeTZnbzkyS3JUT284ZGZlCnR4VHlaaGhvNmt4VFJnMDIySHErTThaU3UzNEZxZWx5WDVvTkluTW50aEU3RENqR0FyT0VyRUlmYklQdWd5VHgKNERxV2tqS0JBb0dCQU0wYmE0TFlVcEZMbUw1SWVaeTltQkpXdXZlTFNLQnNtajRtQ3NZTG1KT1VNRzFQSUIrbQpJVkdGeS9tZHVqUFgzVkxDcC9iZDBtWjNTbmxjVGdmZWtuV3g2UWtvZXB2N3YxdC81ZGkzdnlaZ1pKMVI4YnMvCkZocWlYakpPRWhqYzkrYU55cWg3YXI4RkE2RzZnc2FTdXc1aSt6d1BaVnZjVll6UVpHZ20wQUtQQW9HQkFNaHIKRFFOcTFjd1c1ejZhcXJQU1JueWtnWG1GUVBLSTdIMVMrTTVDdDBsSjFPNllkczVqcG1TK1hRcFozLzluclhQVQp3dWhpZlE2QVU2SVlWYWx4OUNkSWdMU2FUV3ZZZlo0V2grR1I0VWdyMlZ2U2tuVGI1aEFDak5yRjBheXk5N2RyCmd3R3RYVHg4ZzJQSndwZy9OaFZXNm1TT1dSdWFEcDlwbzJBcnh3UVJBb0dCQUs3ditTWFRqYkRoTW5qeFpkQmIKSVE1YkxRS2ZxS1V6bStid0dYWkxRNnB6MVU0V0U4Y0tzaFpQTU9kSk1SeXd1OU92dFFUb3MyQ3oxREJvbXlFNQpJK0FBaTB0RlhEWVlaV0VNV0NVY3E0dDI0Ym9RdjBXK2pBTFJnOWdTSUh0V1ZKWXZUNitkL0RES2ZRdC9BYldPClJyOEJpMWp4cExqUjE2SFB5Q1BSSHM5ZkFvR0FKTERrZXdHdURtVUxCTDBRRDBlcHU5dnFFRE5EQnFQbWw3TCsKOWRQazlqZmNFYW83NWVEOGIya2lZMmk4eDJkVnErVUJvY1dXRzNlRzJDQVlYcU1NRGIwS1F3WVVzbSs1MzUxRQpWeGw3NHRpVVBHazZnc1pYUWdzVmVsL0kyUk1Tb3JPK0VpcUk3Uy9tWmZoajliZHMwVTlPTGdhWmJhSXdseUtoCjFGTnZaZUVDZ1lCQllnR24vdFpUMXRDTWlGUGtsYW1nZUVYK1Z2WW1kOWpYK0JQUDJQYkZ2RFVIbU5pV2M4MG8KZmJmdlFHVnl3ZVR6UDZ6UjQ4MzcrdzhYK1BJS3hrVDVzQjRvTHZTa1c2aW9wSm82NG5MTUNEcFMzUUN0V3FDMAo2SHhuZklCak9VaFFka3phblZUN0lkMGRRcnJ1TEF1bmhOdzZLeHc5eTdQcENpckI1VCtpQXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUpnNFFvVXQwQVh4L3ppVmFWcnFoeGN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1USXdPVEE1TlRFek5Wb1hEVEl6TVRJd09UQTVOVEV6TlZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb0pNdzRVb1JlV05aQTUvYXN3N29Qb2tBRkxQSFcycTNiampjaGFDaQpjVXdTc2wvY29GZExCd01sSWFGUGVFYUxnZU9PZG5KRzJnQms2Z0lCeUtNZkZnamFRM2kxZzNLcStlZ3RSQzRkCnhMb05TL3BkOVNna3FVQ081Z0M2bHJQeG03RzFpSVQweDlqRkIvbHdKQkdzTW93SENkS2U2Zkl4Z1ZZczBzekgKbFVxMmk0T0NzTjBZOGlrcjY0WFY1Y3liWXpiL05xanVVK1NrQ1lBU0RiNHBjL29Xc2hWVTFubjh3bDVXYnZtKwpNaTBtVmkvdEJ6N0h1cElqY0xudHR3dWdCZm9WVjJYMHZVdDdJZWlRS3VtdkZaTTZ2cm0zU0wydXpmd0c2OGhyCktnUzVhSmYxZ2orZkk3TlJZcDQ5bDZtbXpFU1F5bW1ZclR3RUxHcEYxZ05uZndJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1U3dWEwald4MktrYm1FUjJ1cEpCbE1EbXEKclBDSld4bWkxSVlIRVc4eUFYNlJ4b0p5WG1uMk1MTUhQdy9SSmNYZ1RpSVM3aHRRYWdsRU9Gd3cxbEF5MzJ0NQpDUlVvTVp3ZjNwWHZFMHBnZTRCVVVxd0lGT2ZLOUxYR3RvTG51bGRtUXhRVWhOWUQ2Z0haZW9ZL3ovWUpJenV3CkR1Z2JCckxLcHlQUVA2dnNqU2FJNHhIYUpINGdJb2poWDBQRHFqTmcySlhHSFZMWmRZNmlaT21UNE8vNjRVRmQKMVFNSFQ2U1prZjh0Z2ptZUFlcXcvcXA5ZndsRkVVdFdnbDd5NGdUNUFBaWpHT1VlUWZWSG13U3NhODJpMG9KVQpkUjJzK0JtQ1NlWTU3OWdIQzVSOXJRa1JPbDlpUUZuWCtVeXQ3ZnhyT3JWN2tzSWpIOG5CMHFqL2VMUk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYllDdy9hQm5RVXE3MWNYc094elN5akFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRJd09UQTVOVEV6TlZvWERUSXpNVEl3T1RBNU5URXpOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMbWNvc2ZrU0hqZmJaRzM3QTllM2ZjV09JRFlrZWNmMmFHQ29ITUVaSS9rdFFNUwpPWU8wemRkajBJUzZubDBNSHRTeGtOTkN6MTVZTjRBdmZQa3NGNDRyOVhNOEZYYStCV3g0QUcxZEhZWGVLYUl1Ck9NOW42YVJ0OUp0RUVVbjJPRWZ6YUQ5Z3Q0UEU4R1ZoVkpiQ3E0RkpOVEFicDZFTHAvRXBoNmFmdThTWXptVFYKSUk4OGkxRThOYzRYUzhINkN4R1hMT2swWHp3RkU5alJ2emQ2by9xalAvemd4bTVrUlVtMnRaSldFdUhDckNBNwpkbWN6a3VXYzYyQkRxU0V3K0ltZmZ6Nk9LbnRHbFhLRlpiZjQ4ek1NY1lFR3ZraEc3Z3lGdWM5YkRmVk9OKzRJClJqMnY0R3l3T1FaWWFyT1lrRndvNDE5R0oxbkNKWXU1dFVDUWJTTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRHBFQXJWZDhKbWw3MGNvaGJBYTdaOXU2RU1sTnZmYTV0cDYKcUtnMEEyemhvZnlIdGJ3MUVyaHBDMVpZbjh6czMzQVVraFp1SmhRMWxhL045OXNENG1rRTVxbnlzbk1uenBvagpOR2swaFhuakJLN0RQRUdkY25ZekdqdlVvdHN0a3orTi9LbUs1Umc0TTd5SDNtcW9NYWE1UHBoM0ZhVXVZcGZoClNSSzFMY3EzNG41clpyRklEV1E4MmNXcWJ1WWRGbkMxN1NkbThWK05BOFdYUzVoeE9xbC9lV1huSDdtWlRqYW4KTERDT29FRTBJZWxqS2xFSmdDZXdmZEhPK3RBemxnRnNiRkhYQ0UxQXZUMWtSakw3dVZES1dUcEJGdjNpSUN6ZQp1MDF3SXhqYloyeUlFZGFmd3gvUzg3YWlaL0pxMkszSkRZa2JBVm5FZ0pjZWF1dDRlUGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVp5aXgrUkllTjl0a2Jmc0QxN2Q5eFk0Z05pUjV4L1pvWUtnY3dSa2orUzFBeEk1Cmc3VE4xMlBRaExxZVhRd2UxTEdRMDBMUFhsZzNnQzk4K1N3WGppdjFjendWZHI0RmJIZ0FiVjBkaGQ0cG9pNDQKejJmcHBHMzBtMFFSU2ZZNFIvTm9QMkMzZzhUd1pXRlVsc0tyZ1VrMU1CdW5vUXVuOFNtSHBwKzd4SmpPWk5VZwpqenlMVVR3MXpoZEx3Zm9MRVpjczZUUmZQQVVUMk5HL04zcWorcU0vL09ER2JtUkZTYmExa2xZUzRjS3NJRHQyClp6T1M1WnpyWUVPcElURDRpWjkvUG80cWUwYVZjb1ZsdC9qek13eHhnUWErU0VidURJVzV6MXNOOVU0MzdnaEcKUGEvZ2JMQTVCbGhxczVpUVhDampYMFluV2NJbGk3bTFRSkJ0SXdJREFRQUJBb0lCQVFDM0FacDU3am9LZTNrRAo2TXptSnNwQmVmWkNDOFpubEw2MmdSNEQ2WHZoYUVXVS9wNFludWNwakcrbXZuMndEbWhEbThQSW1LSHZTcG1HCldNd212WE9JS1ExOERleTN4QW1DOWhxdHVkYUhEQklPcHZZNmdTRWJqNUpTbUYxWGlGM2JpMEhvNDBwdHNIcTUKNnFwRmJ6RThhdHIzVVAwSlMzM055UDNIcXN5dXU2N2N3M0YvQTVvb3BiUitENzdMTkpwT2NSNjlsNUtXZjZVYwpCU25hQmtUU0ErN2JlVHFLZlJzQ2hDaHRud2hhZ0cvU2VBR1NNT0F4d2llT0FTRHFJOXcxOWpaSUQ0Z3kwRkFBCkpaTzdTQzFSVFdvWWlkd25QV09GVUg4L3Y3QllyZnY0ZG9OMzNoM3YrVGdIWFVrbEQzcHVLZjRrR1ZzOVlEbEsKdTE2bUNyVVJBb0dCQU1RbmRZUkJXNzBSSVVwcXJkS0poa3BZaTRvQ29oTkVtNXo4bnZvUHRUTjBLOGpsNHhKRwppbytIUUNrRWM4eXJlaUFIc1hkRnEvUm5ITUxkd3JDVUI3VEdnVHJGVVVhWE9HRGFtdG9xR2tXZ0Z0cUVvaFVhClVOSEVhYXFGdldHMGRWTG4zajA2VVNEUFE0K3kxWkQrdmpxNGM2TVRtOEJqbmxhS0IxdU91NzFyQW9HQkFQSTkKeHNCTnB1VXdNdlNJZVVnZE41WTVjQjV2VStyYXVUNm13S0tPWUtqbGpBa1BtUlBvMy8zUGZpZnExWDFYcUpGNAo3elp3NHcxV3lEbm96b29YVzVnV0FXV1cyRnpBbFZyeUl0Zkdvb3dkWGJkaXdDYnRSbHFWRGtRMVdQbUs3NGVoCmN3QURyMHJ6aDV3UVVWSmx4TS9pNmJsY0xTMFVuOGRmVmRZMFpBVXBBb0dBTGJCSE5od0hJejIzTkY4dXg2aFMKeUVSaGxDN1MwNHdhZHZGOGtpQlFnNENlcGpldHNWY085U2w2cjFNaktkd1RJUnpKb0U5eEl3ZFZjcW8ycSt4Kwo4d045bkZQVGY0Ni9pZ2ZCSStuRW5zMFFKYXZaR1BNOU9lNzI4Y29lOTRBU0I5S01PRlM2Q3R0Y0VEK0djVFIwCjJMYVg4TGNqZ3lkdy9SVS9hM3NPamFzQ2dZQS84OXRDN2IxQUNLZUxNM1NCZTJVdmZkNkJ5blpuTEhOM2ZPS2kKaCtBdzl0a3ZrelNnc3Z4ZnI2WG90L0RBOUtHR05sMUJERENGVndIcGQvTC9OZ2R5Y1d6USt6QUgzTGdSbUpkbQpUQVNoNVNiV3dYVmxVWU1mYXZhblAwWk1LMGZ0a013aGx0ZHlmRFN6R1FPL015cndqMEdSTkNxaEdpN01uZmkxCllvTjljUUtCZ1FDRDZUNVNmeGZMSHdTUi90eUNjbkNVK3hCcVRwYjBBL1BzU3VjZ2pNd0dLcVd4dTNOTExzU3AKUTI0UitMTjdvbVNCZU4ybFZ3NUYraGsxVmNIWVRkcmYwWXd2cHFMZk01aVg2RVlSRCs2SnZmNjg4NGkyZk1Qego1RzRRMjM4SVJOZVo5OC9SQXpVZ0pMajlieU4wb0RCaitMSkZyV2hQT3RVdGpJMXFIS25kUUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYllDdy9hQm5RVXE3MWNYc094elN5akFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRJd09UQTVOVEV6TlZvWERUSXpNVEl3T1RBNU5URXpOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMbWNvc2ZrU0hqZmJaRzM3QTllM2ZjV09JRFlrZWNmMmFHQ29ITUVaSS9rdFFNUwpPWU8wemRkajBJUzZubDBNSHRTeGtOTkN6MTVZTjRBdmZQa3NGNDRyOVhNOEZYYStCV3g0QUcxZEhZWGVLYUl1Ck9NOW42YVJ0OUp0RUVVbjJPRWZ6YUQ5Z3Q0UEU4R1ZoVkpiQ3E0RkpOVEFicDZFTHAvRXBoNmFmdThTWXptVFYKSUk4OGkxRThOYzRYUzhINkN4R1hMT2swWHp3RkU5alJ2emQ2by9xalAvemd4bTVrUlVtMnRaSldFdUhDckNBNwpkbWN6a3VXYzYyQkRxU0V3K0ltZmZ6Nk9LbnRHbFhLRlpiZjQ4ek1NY1lFR3ZraEc3Z3lGdWM5YkRmVk9OKzRJClJqMnY0R3l3T1FaWWFyT1lrRndvNDE5R0oxbkNKWXU1dFVDUWJTTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRHBFQXJWZDhKbWw3MGNvaGJBYTdaOXU2RU1sTnZmYTV0cDYKcUtnMEEyemhvZnlIdGJ3MUVyaHBDMVpZbjh6czMzQVVraFp1SmhRMWxhL045OXNENG1rRTVxbnlzbk1uenBvagpOR2swaFhuakJLN0RQRUdkY25ZekdqdlVvdHN0a3orTi9LbUs1Umc0TTd5SDNtcW9NYWE1UHBoM0ZhVXVZcGZoClNSSzFMY3EzNG41clpyRklEV1E4MmNXcWJ1WWRGbkMxN1NkbThWK05BOFdYUzVoeE9xbC9lV1huSDdtWlRqYW4KTERDT29FRTBJZWxqS2xFSmdDZXdmZEhPK3RBemxnRnNiRkhYQ0UxQXZUMWtSakw3dVZES1dUcEJGdjNpSUN6ZQp1MDF3SXhqYloyeUlFZGFmd3gvUzg3YWlaL0pxMkszSkRZa2JBVm5FZ0pjZWF1dDRlUGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEyMDkwOTUxMjVaFw0yMzEyMDkwOTUxNDVaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEvGoO8YAAiRrBMZWFsIR+uUgPQF6KmItRIMAxni8VS+osaymMbC6YilFY6KsN
            Oqa06rq22hNELwkBYRO2jXKEEqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBQWjwUwbKnxdQ4VmWblnz+FM2Gt3zAKBggqhkjOPQQDAgNHADBEAiBvj8tzk7ZD
            1+s37ujpzg8kzQO5t+QjWXeTRKRp+TFS5QIgb5pp5BpVHBk5cOMcPehkCCFtOrhB
            oCnqj+U3IWe9aJw=
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEyMDkwOTUxMjVaFw0yMzEyMDkwOTUxNDVaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEvGoO8YAAiRrBMZWFsIR+uUgPQF6KmItRIMAxni8VS+osaymMbC6YilFY6KsN
      Oqa06rq22hNELwkBYRO2jXKEEqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBQWjwUwbKnxdQ4VmWblnz+FM2Gt3zAKBggqhkjOPQQDAgNHADBEAiBvj8tzk7ZD
      1+s37ujpzg8kzQO5t+QjWXeTRKRp+TFS5QIgb5pp5BpVHBk5cOMcPehkCCFtOrhB
      oCnqj+U3IWe9aJw=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: thetadr/linkerd-proxy
        pullPolicy: ""
        version: logs-arm
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TURrd09UVXhNalZhRncweU16RXlNRGt3T1RVeE5EVmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUV2R29POFlBQWlSckJNWldGc0lSK3VVZ1BRRjZLbUl0UklNQXhuaThWUytvc2F5bU1iQzZZaWxGWTZLc04KT3FhMDZycTIyaE5FTHdrQllSTzJqWEtFRXFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUVdqd1V3YktueGRRNFZtV2JsbnorRk0yR3QzekFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJ2ajh0ems3WkQKMStzMzd1anB6ZzhrelFPNXQrUWpXWGVUUktScCtURlM1UUlnYjVwcDVCcFZIQms1Y09NY1BlaGtDQ0Z0T3JoQgpvQ25xaitVM0lXZTlhSnc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUM5dXN5NElqdzV1WWZKcU1IR2s0bmVxZFpDY25MaS8yZ3FSNGtlcit4bkpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdkdvTzhZQUFpUnJCTVpXRnNJUit1VWdQUUY2S21JdFJJTUF4bmk4VlMrb3NheW1NYkM2WQppbEZZNktzTk9xYTA2cnEyMmhORUx3a0JZUk8yalhLRUVnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEyMDkwOTUxMjVaFw0yMzEyMDkwOTUxNDVaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEvGoO8YAAiRrBMZWFsIR+uUgPQF6KmItRIMAxni8VS+osaymMbC6YilFY6KsN
    Oqa06rq22hNELwkBYRO2jXKEEqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBQWjwUwbKnxdQ4VmWblnz+FM2Gt3zAKBggqhkjOPQQDAgNHADBEAiBvj8tzk7ZD
    1+s37ujpzg8kzQO5t+QjWXeTRKRp+TFS5QIgb5pp5BpVHBk5cOMcPehkCCFtOrhB
    oCnqj+U3IWe9aJw=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 188efa081e53c176f6ccd48766ea8a28d80a5c01de0769db66178fdecf291345
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 188efa081e53c176f6ccd48766ea8a28d80a5c01de0769db66178fdecf291345
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "01 10 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 188efa081e53c176f6ccd48766ea8a28d80a5c01de0769db66178fdecf291345
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TURrd09UVXhNalZhRncweU16RXlNRGt3T1RVeE5EVmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFdkdvTzhZQUFpUnJCTVpXRnNJUit1VWdQUUY2S21JdFJJTUF4bmk4VlMrb3NheW1NYkM2WWlsRlk2S3NOCiAgICAgICAgT3FhMDZycTIyaE5FTHdrQllSTzJqWEtFRXFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlFXandVd2JLbnhkUTRWbVdibG56K0ZNMkd0M3pBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCdmo4dHprN1pECiAgICAgICAgMStzMzd1anB6ZzhrelFPNXQrUWpXWGVUUktScCtURlM1UUlnYjVwcDVCcFZIQms1Y09NY1BlaGtDQ0Z0T3JoQgogICAgICAgIG9DbnFqK1UzSVdlOWFKdz0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUM5dXN5NElqdzV1WWZKcU1IR2s0bmVxZFpDY25MaS8yZ3FSNGtlcit4bkpvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUV2R29POFlBQWlSckJNWldGc0lSK3VVZ1BRRjZLbUl0UklNQXhuaThWUytvc2F5bU1iQzZZCiAgICAgICAgaWxGWTZLc05PcWEwNnJxMjJoTkVMd2tCWVJPMmpYS0VFZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXlNRGt3T1RVeE1qVmFGdzB5TXpFeU1Ea3dPVFV4TkRWYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUV2R29POFlBQWlSckJNWldGc0lSK3VVZ1BRRjZLbUl0UklNQXhuaThWUytvc2F5bU1iQzZZaWxGWTZLc04KICBPcWEwNnJxMjJoTkVMd2tCWVJPMmpYS0VFcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUVdqd1V3YktueGRRNFZtV2JsbnorRk0yR3QzekFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJ2ajh0ems3WkQKICAxK3MzN3VqcHpnOGt6UU81dCtRaldYZVRSS1JwK1RGUzVRSWdiNXBwNUJwVkhCazVjT01jUGVoa0NDRnRPcmhCCiAgb0NucWorVTNJV2U5YUp3PQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
