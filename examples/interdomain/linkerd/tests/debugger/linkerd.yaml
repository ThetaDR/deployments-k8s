---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBzOWxlODZmd3Y2R2JUeXRqTXh1WTR3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpJMk1USTFPREUwV2hjTk1qTXhNakkyTVRJMU9ERTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUs1SVpHTmlLT1VyV1RvQVU0NmhmbUpFSG1aR0pQWFFkRWFETUtjZlBDaVEweG9XelFsRQplUjhIa2VUYmtKWkN3M0haSG5mTzVjRDh5ZUFvK3BtMjZCRVJuSXk2cU40bXJtem44cm51NlJiOXROc2t6T2JYCkNqOVpVb1hqZ2g2aFZ4N2JMQlowUS9DOGVBTzFiWHR4TE9WSDg1M2pqNGU5eSthQ05NSG5QcUFTUlVCM3NoT0wKM2lvOTg0d0orR0VIQkc5aFRVbWNjL2tiWFpiS09IUkdqSkRjQ3g2Y0FlUXV4ZU16bmVDbURVSEZUMG0rVS83Kwovb1Y4dkpJMHdrdU9hQ2svTVlQZkkzYXJxWDZQbkVncXZiZDlydEJMWjR4UTBJRDJqT0xkMVBLSmE0cDFyL0FWCmpuQ2dVYU9XMC9CeHg3L3ZIT0dCVCtiNkkrZ3dDUUFyeEU4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDQnF6cEdxQmp2a1NubDhTak9BOHR2WW43N2dCNi9zRXFJMCttWm13c0MKM3VFSTA3cnAweHJKdlJURnJiRzJPUVk0VjZ0WnJUT2hPc0cxNUFjbE5tN1FMd0xySGpqMTBtMlVaL2xOOCtZdwpKQVRtcmdMU3RsUWpBT2QxK3cwNHhaM0M0QXgxTVQzN2k5YjlaQytKQ2ttRU1sYVoyd1IxR3Y5Q1o3QW5xRUlhCjVsNUx3QmdoOS9ndGZ3cFgvSEk3WDA2OGN0T2hTa2hMZ0VUcE52K2xPUExsMmpMUlhyUjdBWTZrdDhkMUVacDIKY0E2bEtYODlqQVdZRi9nSkR1ZjN5YU9ZSkFSVFBqRjhwTWtBTWNGRUtJWGF4RkNQNDd5dTFxVEllZExwWHd5Lwo5QnNYaWgyV1cwN25xZUdNOXFMbktnb2YyeGg4ZHBIWmZSaDRWTVkxVUxoOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcmtoa1kySW81U3RaT2dCVGpxRitZa1FlWmtZazlkQjBSb013cHg4OEtKRFRHaGJOCkNVUjVId2VSNU51UWxrTERjZGtlZDg3bHdQeko0Q2o2bWJib0VSR2NqTHFvM2lhdWJPZnl1ZTdwRnYyMDJ5VE0KNXRjS1AxbFNoZU9DSHFGWEh0c3NGblJEOEx4NEE3VnRlM0VzNVVmem5lT1BoNzNMNW9JMHdlYytvQkpGUUhleQpFNHZlS2ozempBbjRZUWNFYjJGTlNaeHorUnRkbHNvNGRFYU1rTndMSHB3QjVDN0Y0ek9kNEtZTlFjVlBTYjVUCi92NytoWHk4a2pUQ1M0NW9LVDh4Zzk4amRxdXBmbytjU0NxOXQzMnUwRXRuakZEUWdQYU00dDNVOG9scmluV3YKOEJXT2NLQlJvNWJUOEhISHYrOGM0WUZQNXZvajZEQUpBQ3ZFVHdJREFRQUJBb0lCQUJPUDFKVERJOHYxUGFLZwovci8zcUhQbktYSlpWVFN5SFJyOUJxejdlSWtsR0V6SldtSTc2VXh1VVJYYS96T2Vjc21Ja1Q3cFhpaDNOMEdOCjEvTUE4TE5ad3JTWkR2TkFiRHVWSFUxNVgzaFJLY2VmTGRDTE9uODV5MlZ6ejlzWVNPc1J0clVlZjdHNXRjN1UKd21Fa3B1RmxYaGJPd0FHQWNDNkRWdUNjMEE2dlRzT3R3VzlTdEw4amRWNFFnckszRjgwVTF5S1dFSzJtem1MZAp2UCtZWjZSQnZHMnNYQXJvaHYzeGNjaCt3Y1hmVXQwUzZOVlI4bmVlaTRKWEpNVEJEQU94ZnhiNUtRcTF6TnVOClFEcHJKTjRZUVFqdHpxQmkrSmxERTZFNXA3SzhJOEl0VnY2VDJ5T0F4aTU5eTFkL0EwY1pRbWUvME53WUs5cnMKekorcTEwRUNnWUVBNHlOanRQSDc3elhMek9tc2RxREZlajUvVUZhLzdBb2xDMlpSbnBCY3pyRlBRN2RQZ1J2QQpCQ1pyTWNuVXNOZHkrRUFNcmZ4VmttZk5OL0NtMjVXaVFWOUxSSXFzVnRoQmJVQVhPNzFKSHRTaDFTWHNzbytqCkxxc3BKOEdnNVBkdm8wR2kySk04OUduTXpRTHVDVDNDVSt5ZUEvSU1yRWo3cXh3TUV6ekVLTWtDZ1lFQXhHMnAKQ2kzT3RvTWdBSEJUTGRZd01OQ0hvc05acys2em85aFpiSFp5dno0RjNVZUlUVTFheU1BL2MvVFZMZ21zcUx6dAovMTlxWG83MjBtcWRZbFJHbTlYZk9mQWtMcC9ZNjFGMzAvU3pKcEdwb0l6Q1pOMy9UOVdzcG92VFAzUTNOUkFnCjVTV2ZETUU1NmtZSmVlbmVSTE5IMjRLb2lyUFFRZGVyK3VYT3FGY0NnWUFXenZYek5KMTgzdVVSTmFIWTQ3b1EKMVhmSlpIeXZRakdJSElVenJBRjF5LzVPcVhpMVdVa0Y0YW0vL1NsN2ZKY1I4TFNWUUJLRHVpSzBiRmtGRWRpUwpRZlIzOUlqcnk1bCtWQUpCUUhlNFBkZm1aSUdKU0wwMU1ZRFhlaTBpOE9ubjllNVpXeWV5ejNEK1lUM3Y5YUN1CjlzTERXS29ISHVrT3ZLbEZ3VU5kYVFLQmdRQ2FtN1h4elJ4bmk4NGtpa1R1VHlpZlE0Ti9HVVFCM0dDSkZrRk0KbmU2em1KNEZEY2k3RDZmbFcyeVdXSjl6SFNwSnBtdXVGZXdqZ1dQRk95V2x2Ni9UK1FNN0YwbGphVzNUeXN3RwppUlI1eHkwOHNZNVExbXVlNnhCNkJwUy8zVG1YQ3ByWndrTHVSeWpPdlZHNEk5eFBOczNZZVg4dnJWaStlb05qCmVINnhBUUtCZ0FTdnhFd1liUXR0TDhwWk1NTERlMW55VjNHejA0cTN3aHNPcFhwZ1BXTFAxaTlBWUJSZDgwWUYKR3YxaGdTNUdVRG12ZEd1SkZubkNjMDJya3lJbGJXQ3NiRVk1TXlmQTlIUXV0Vmt6cEVMdWpLMnc0WTdMZEYrRgpzSkhveXFJSFUvU3dWZnhaaVdoWGpFZ1ZteHJhcFFpZDR1MkhpT01KRGxpTWEwOHMxN2J1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBzOWxlODZmd3Y2R2JUeXRqTXh1WTR3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TWpJMk1USTFPREUwV2hjTk1qTXhNakkyTVRJMU9ERTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUs1SVpHTmlLT1VyV1RvQVU0NmhmbUpFSG1aR0pQWFFkRWFETUtjZlBDaVEweG9XelFsRQplUjhIa2VUYmtKWkN3M0haSG5mTzVjRDh5ZUFvK3BtMjZCRVJuSXk2cU40bXJtem44cm51NlJiOXROc2t6T2JYCkNqOVpVb1hqZ2g2aFZ4N2JMQlowUS9DOGVBTzFiWHR4TE9WSDg1M2pqNGU5eSthQ05NSG5QcUFTUlVCM3NoT0wKM2lvOTg0d0orR0VIQkc5aFRVbWNjL2tiWFpiS09IUkdqSkRjQ3g2Y0FlUXV4ZU16bmVDbURVSEZUMG0rVS83Kwovb1Y4dkpJMHdrdU9hQ2svTVlQZkkzYXJxWDZQbkVncXZiZDlydEJMWjR4UTBJRDJqT0xkMVBLSmE0cDFyL0FWCmpuQ2dVYU9XMC9CeHg3L3ZIT0dCVCtiNkkrZ3dDUUFyeEU4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDQnF6cEdxQmp2a1NubDhTak9BOHR2WW43N2dCNi9zRXFJMCttWm13c0MKM3VFSTA3cnAweHJKdlJURnJiRzJPUVk0VjZ0WnJUT2hPc0cxNUFjbE5tN1FMd0xySGpqMTBtMlVaL2xOOCtZdwpKQVRtcmdMU3RsUWpBT2QxK3cwNHhaM0M0QXgxTVQzN2k5YjlaQytKQ2ttRU1sYVoyd1IxR3Y5Q1o3QW5xRUlhCjVsNUx3QmdoOS9ndGZ3cFgvSEk3WDA2OGN0T2hTa2hMZ0VUcE52K2xPUExsMmpMUlhyUjdBWTZrdDhkMUVacDIKY0E2bEtYODlqQVdZRi9nSkR1ZjN5YU9ZSkFSVFBqRjhwTWtBTWNGRUtJWGF4RkNQNDd5dTFxVEllZExwWHd5Lwo5QnNYaWgyV1cwN25xZUdNOXFMbktnb2YyeGg4ZHBIWmZSaDRWTVkxVUxoOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRjNNbzVYYm1jeGhIRW1nWUtPaHlyREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qSTJNVEkxT0RFMFdoY05Nak14TWpJMk1USTFPREUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURBTGpkTlhIb3FYUFp5d0R4WmlaZ2pocWQ0cFpNQ3FtcktUWTBnSXcyQQplZmNmMEM3UGE2THBxeFQ0ZEkwOU81R1d6cjF5YlY2YkExcW1OVkIxUU1UWjBiV29UL2YrZGFTV3lCVjB4T1YxCnpjRXRHN0d0Tk1pYTVIUmRNbDBpeFhXcTJtMFM2VllnTEJ5enNhcTdFUzFQY2FDK1dOcnhyR2VpWHIwZzhNVUYKWithZjl2SEh3Q2lyZlRmeG1rQk0yL2JCc0FSVS91R29XeUtNNCt1Q3RvWGxCTlY0MVRjSUpiQ0FzM3ovYjZqNgpZZURzN08xMWhsbTFLQmFwK293RnlaQTN4Y1pEcGNUS21RSnd3RUxzd3orTnZVcVBteWdITmRJYmovS2pmUVVBCmRndkVpbXpFWkdiNUtjYmsvUHVWZFFIUzBsNnRJTkRicDZ5YlNDM3Jkc3BGQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFT3M0MmRaWFlrSWdnQW5jZ2QrYnVsQ1dCVlkKMkUvY3JGVlY4c3R6MDJPQWlHdVRaOTBQTUpSVnhSK2R5bDJwOFpjcGVWY3U5VjFJclozdDNZcXp4ekNYMWkzWAoreVUrbm1tTzdLdCtkY2UxTGR5MEg0NHA4NzBVblAvc3JjM0p4dEdOOCtHbjlDUGRtN1B5ZHN0WDd6QWdCN2tPCkxzTEtCcHBhZ3liRE5Na0FVVXN1eWdNU2FLSFdSTDl4VGd1ZkZmckR2WEFCeThXeC92VUZqODVlVm43R0Y2SVQKbU1ycTFqSUt2c1FsbFF0TVZVdnhsQmd6d0twSEFKelR6NHIwd2NieEY4bFhSRE54Sm00YzJNQ3BuUlQ5Y2ErRQo1Q2pYbEtvVk5kd25EaWFuODJyTXVpSHJzSnZOcHQ3RU1GKzhWMURmQ3ZOUWtNNjhIL1hjODM5MW9IMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0M0M1RWeDZLbHoyY3NBOFdZbVlJNGFuZUtXVEFxcHF5azJOSUNNTmdIbjNIOUF1CnoydWk2YXNVK0hTTlBUdVJsczY5Y20xZW13TmFwalZRZFVERTJkRzFxRS8zL25Xa2xzZ1ZkTVRsZGMzQkxSdXgKclRUSW11UjBYVEpkSXNWMXF0cHRFdWxXSUN3Y3M3R3F1eEV0VDNHZ3ZsamE4YXhub2w2OUlQREZCV2Ztbi9ieAp4OEFvcTMwMzhacEFUTnYyd2JBRVZQN2hxRnNpak9QcmdyYUY1UVRWZU5VM0NDV3dnTE44LzIrbyttSGc3T3p0CmRZWlp0U2dXcWZxTUJjbVFOOFhHUTZYRXlwa0NjTUJDN01NL2piMUtqNXNvQnpYU0c0L3lvMzBGQUhZTHhJcHMKeEdSbStTbkc1UHo3bFhVQjB0SmVyU0RRMjZlc20wZ3Q2M2JLUlFJREFRQUJBb0lCQUNib05HSUJHdXFBcjVSRAp2dlFSbXk5MkQybXBlNzNLYXB4U1h3UG1sTkV4NEFvY3g1MU9tVWpkVGYyTyt4a3VlaWNoNjlEQ3U2aCtZVmZNCjYyRVJuOGpKWUJHWFB3blJIMlUzVk1DekxCRlJlbzU3VU5sVUdsamhiMzErdU1SVlhhRWRYMys0cGFzVnd5bk8KQ2xhYy82Tlp5Y1Uvai9QbGg0V2owSDVld0VSN2pxSkJPVDB0YUFjdUJoY2xPZGVZYTVwcE1pQUR0VXlmdWNtSQpmZXU5Y1htNVNDOEwra3JIVDJnTnpqUlNuZzc5M0NHeXBjZWM5b2tzVEhGWDcvd2VvdTdCL0dsZEM4NnB2K3d6CkdFMzRrTXFGckFzZklJSDRGc0FoeEF4MmNzQkdrTkNBMEYrUFZRVXN4WnE4QTRnZlc0QWl0QTBsWnRVUUhxN0gKRGxYbG4zRUNnWUVBMWRhSUp4eUM4U05oUWdCbFNReDlVRU1aMjJCWHBnVW9IVWlNTmczeXA3NVRrVlRtSjRESApOWkVzQitCbzJ4WXlsQUFVell6ZFR4RTV0ZStsSjRJMDlOSGhlZlcxMDVRa0krYitjekJlMyt5YklDWU9NWnV4CmlOclM5OTlNRlgyQTNOaU1WWEpjM0ZKQUU4ZzRrRXdaeU8ycW5mcUVTWGJhRUdJQlhLbzRra2NDZ1lFQTVoS0YKOUhRQmRTK0wyRFRBUU4wVEw0SWZFRS8vTU5OK09RZDdjKzFvS0JxWmRWK3FwNnZFS0swT0tzSHZFSXJRWTJSKwpkQ1RPYm5lN0JlOUZQSnljNGlTOFZmYmFKOGlHVnI1OUhQaC9RV1NueWV5ZGZHRlJWYXlma2psZ2FsT2ZRMUNaCitWNDZzeFZsdjUvd1hlNmR3ZEdwOHQzTm5WZU1lZzRadVUrdEdSTUNnWUFyWXVDekZzeldnamdzZlFvUDNUSGIKeEJHTitpa3ViU05yZFpuRktlVk85WVhkR2Qyc3JDcy9DaHBsNnJrN29uQldxUUdQaHdJc0ZiR2c0V09mOVlJcgpIaDVpY1dFWDhabTNreG1UWTRBTWJPUTRqS0FhbnAxUnlCdy80SlYrVXIxL2tZdy9sZm1UVmpqY0NxYTNXRWx2CkJCRzNCZW9yUWFzUzRkK20zbjZsNXdLQmdRRFRZYzlyVXE0SU1lQUZqQ25iTG9NekVoVmlVbTEvT2NGdHVqOGwKdXNrSWw2L0kxRldoNmNHM01aQ2puano4Y04yWGhEeGVqM2FPcmpqSjhoVWw1Q3FMNS82VjZOQjAzdHIybGR1egpvMmlmOTAvbHlSekVxMUVrS3c4Tk5PUXRySmpXS3hiY3MwT3hTQWFNOGZEUkRLd3E2R3lCdEdIMm52cDFKY0ZpCnJoNjJ1d0tCZ0dwRDhVNmtLaVk2Ynoybm5SNkovY3huRnNTcUIzUFkwZE43QWZyUmtBeTlZa3IwR3AxZTcwNDYKZVdNaE9RbUk5Z3VBUk5pcU9ySEI5cG9vSEU0MldNUkdHMWx4RGNZRUduWW1JeXNmTXpkWUxnaVhWYXlub1Z1SAoza1Jsc0o5S1cwZFZ4ZS9aMTMrYVdVbHBGM2YyL2xBWitvVmkyeFBOS1BTME83dEFRTEhzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRRjNNbzVYYm1jeGhIRW1nWUtPaHlyREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qSTJNVEkxT0RFMFdoY05Nak14TWpJMk1USTFPREUwV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURBTGpkTlhIb3FYUFp5d0R4WmlaZ2pocWQ0cFpNQ3FtcktUWTBnSXcyQQplZmNmMEM3UGE2THBxeFQ0ZEkwOU81R1d6cjF5YlY2YkExcW1OVkIxUU1UWjBiV29UL2YrZGFTV3lCVjB4T1YxCnpjRXRHN0d0Tk1pYTVIUmRNbDBpeFhXcTJtMFM2VllnTEJ5enNhcTdFUzFQY2FDK1dOcnhyR2VpWHIwZzhNVUYKWithZjl2SEh3Q2lyZlRmeG1rQk0yL2JCc0FSVS91R29XeUtNNCt1Q3RvWGxCTlY0MVRjSUpiQ0FzM3ovYjZqNgpZZURzN08xMWhsbTFLQmFwK293RnlaQTN4Y1pEcGNUS21RSnd3RUxzd3orTnZVcVBteWdITmRJYmovS2pmUVVBCmRndkVpbXpFWkdiNUtjYmsvUHVWZFFIUzBsNnRJTkRicDZ5YlNDM3Jkc3BGQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFT3M0MmRaWFlrSWdnQW5jZ2QrYnVsQ1dCVlkKMkUvY3JGVlY4c3R6MDJPQWlHdVRaOTBQTUpSVnhSK2R5bDJwOFpjcGVWY3U5VjFJclozdDNZcXp4ekNYMWkzWAoreVUrbm1tTzdLdCtkY2UxTGR5MEg0NHA4NzBVblAvc3JjM0p4dEdOOCtHbjlDUGRtN1B5ZHN0WDd6QWdCN2tPCkxzTEtCcHBhZ3liRE5Na0FVVXN1eWdNU2FLSFdSTDl4VGd1ZkZmckR2WEFCeThXeC92VUZqODVlVm43R0Y2SVQKbU1ycTFqSUt2c1FsbFF0TVZVdnhsQmd6d0twSEFKelR6NHIwd2NieEY4bFhSRE54Sm00YzJNQ3BuUlQ5Y2ErRQo1Q2pYbEtvVk5kd25EaWFuODJyTXVpSHJzSnZOcHQ3RU1GKzhWMURmQ3ZOUWtNNjhIL1hjODM5MW9IMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU9HdlhvWGFLL1lvRmZRWldCL3ljTUl3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1qWXhNalU0TVRSYUZ3MHlNekV5TWpZeE1qVTRNVFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzZBZUJLUmd2Uk5TVTlMSEJZdjQ2T0VlNkl3MGViWUdlL1dKOVNyOWpBL1poSQp3TkxMQnRZR1dBbkZUTkxmQjVKM1JTV0FZblRUb25SV0dqRkRrNE0rMTFKMEJ0MWl2VVZaUmxqQldIcUxKamh0CncyNVNkVzRMYVRoeGw0bUNSbDVMejR4bUp6MzdPSG1oaTZtaktCMFZkT25yWWtrUXNIN0VHeGpscDI4a3RCb08KSXRabkYwd3lXK2tja0ZQa2lZcmREQU5POHY3QUF6dXpEa3gydFhMSHRRZUFsbDJzNlhBQlcycUVMd0dkT0JwWAptREphY1JSTTBBNHZEYjlsNEd4a2dJNGtEMU9rM3VURXBuTE9nbEdzTXRZNFlBNjY0RzRCNG9CQWh5ZGtFdTB1CjNoMzlMSzA5OWIrMENwRE1TZUx5S3lKLzNubkE1clIra1pQQWNodFJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFKR0p2VUozMWhicms3Rzg5UnpLdVhSZCtNODBMZDNRcU4KZ01vT0RLZmV2UWduUmhRNkE4V2M3M2pNL1A3NDlJcHE5VFkrSzY4aitJcUdObWpCZE5USHUwNW42YlgxbEJxdgpRM09jYVVMclRxM2tFYWV5Wm9CYU1kV2g3MnZ6SVVLbWR2d1YyQmVqUU1pclMrVTdybXl1VWlLcm5mcG4vbTJDClpjWTRaZllvbklheFdiemF0VXBzZ2RidXRQYnVsU1FpcHRGUXBlV1g2SmZyMmk3VWtDUlE5MlhtYWo1RkovQ3QKc0kwdndqVk11VVcvWUw5NS94OFl5cHY2SDF5UHBoZG9VQlZvcHUzUU9tVUhuUTVnejRYTkpHVlJoSElSZmY0VgpaSmVBUTY5TGF3emdSeU9Yc0hHYnl3S3NkYitHYWhpTGNySExRSy9mc2pndFJkTWRjQWZ5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWdIZ1NrWUwwVFVsUFN4d1dMK09qaEh1aU1OSG0yQm52MWlmVXEvWXdQMllTTURTCnl3YldCbGdKeFV6UzN3ZVNkMFVsZ0dKMDA2SjBWaG94UTVPRFB0ZFNkQWJkWXIxRldVWll3Vmg2aXlZNGJjTnUKVW5WdUMyazRjWmVKZ2taZVM4K01aaWM5K3poNW9ZdXBveWdkRlhUcDYySkpFTEIreEJzWTVhZHZKTFFhRGlMVwpaeGRNTWx2cEhKQlQ1SW1LM1F3RFR2TCt3QU03c3c1TWRyVnl4N1VIZ0paZHJPbHdBVnRxaEM4Qm5UZ2FWNWd5ClduRVVUTkFPTHcyL1plQnNaSUNPSkE5VHBON2t4S1p5em9KUnJETFdPR0FPdXVCdUFlS0FRSWNuWkJMdEx0NGQKL1N5dFBmVy90QXFRekVuaThpc2lmOTU1d09hMGZwR1R3SEliVVFJREFRQUJBb0lCQVFDZDR1dk1mK3FWK1dPVApxbjN1aHlMdEt3RnJxejdELzYvd3RyditSdTlZMmFtQ3o5SGRyZjdMd2IwQmNYVnBCUmRwRUJPR0I0eWMrNzkrCk9wdG9mZlVneVVyZTI5amRjRVZHUXpVaFlRWWJ5U1NLM3lGczh1cW0ydmlqU3ZyWXp2eEpvM0hNWUREM1puZXcKRFVuQUNWT3VtOS9YQWtWODJpT3dPRVFJNC9ldWtaTEpIQjhKUGsva0NQL1ZBN0tpU3RWUDhmaU5Jclgxc1NhWApoUnBKVXgyYzRzenZuQzFkVnR0TXNiRkl0bDZqdDgvL1F3U0xTQllOcTJLb3YxZGQyRUZMZ1NzbnJWMFRDZ1ZvCmpRQkhWbzB5RndRaXhTOThSNzJzeWFGbmVLRWI5N2g5c0xrclpRQ1I1Ym5lR1IvWndVeHBlVkZBUkRBZGpTM3YKMDdrd3M1RWxBb0dCQU0vQkF5S1cwWGk2djJHQVQ2dmRQaGFUSHp3MVY5NTlla1lKQnczazRxS2ZNeWgrRWRaRQpna3VwK1BZanc2dm5KdStTRUNKd1lRQ2NBWW9Nb0dIbjV1anRhUkh2ekx4c0tSOXVvc0VBelFLR21BYlJUcllQCnhBWDRTaVhwWjgzNlNxS2lrMzVjQWlLejY0Tm9RTFowUldqdWYwQkczSTloSlZnc2kzM010cGNMQW9HQkFPVTAKQm9HWWhObENheHhBajhGMm5Pb2l1cVdURnpyazJVTUNsWm5aN0ttUkNiWVl6eEQ0ZEtaMmJLOU1OcjlCZUlnegpDZU5CaFBJVmY4eUNHZDRWSStETmFHSkNYZ0ZtVWJiRGdZVmJUMXNaaDBCQWRNbTU1Q3FsUG96YTV4eDJjcGpJCmhtWURWVjNrVXRoOFk2MUNaL3paRGVmZ01XMjFsc0lwS1FxMUtDQ1RBb0dCQUtVWVROVi81Slo4VVBtNmJaVzIKQzFFRk9SMHZodFJZQW9NRlNZWFJEZ2tOV2lvamhTa3c2Qm9ZeUs5UlhIMlBBM0grTUxRdGVlaHlFUWNUWWFCcwpHU09oQm80cWNoaUtHMlBQRjZjb2E4SkdFeW5YeXlVREFsTjhLL0JVdXhrRWZhc2dadlZUU0o4ck8wMEIyK3NpCkdzWjRRTWRqaUlLb1FIVUJjUmhYUmdKaEFvR0FRR25Za2o4OHhwb0Y1QkM0MWRQeDBWTWxSVGNMUmovZVZ4aTQKMWw0S1JyVStGM0R0Y0lXQ3N1MkJLZHF2WUJ5VU5TS3kycTBsSWF1dEdOcFBUcngrTXNWSFdxWHdLVkNLRW1UcgpWNEVMMGp4Z2FFdzFCaVE1M1VwSFErcVpITVNrL0E4T3hraVZpeWVKcU5GOGFjckowcU5sWnc3NGxTNTlTZCtyCmF4anlTQVVDZ1lBdlpNMVZMcjJtNS9ueEo2MmJpaFlaTUlVS01XaXJ4QkVnZ2twQnkzQUtZbnJGLzJxWkRMRHoKcmQ5TGZVNVBTMFpGRTdqTDJUejNtVFRybUlvTm5oN05mQWtpMkV5QWhVVHB6K1Q0MkpqRHZlS1NEV3J6ZisxSApOdUhaUWJmM3c4c1UxUitqQTN5ckhEQ3hYOVNSeWVraW1nUi85WW1iSEUxdkRvUVJxMWh5M2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU9HdlhvWGFLL1lvRmZRWldCL3ljTUl3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFeU1qWXhNalU0TVRSYUZ3MHlNekV5TWpZeE1qVTRNVFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzZBZUJLUmd2Uk5TVTlMSEJZdjQ2T0VlNkl3MGViWUdlL1dKOVNyOWpBL1poSQp3TkxMQnRZR1dBbkZUTkxmQjVKM1JTV0FZblRUb25SV0dqRkRrNE0rMTFKMEJ0MWl2VVZaUmxqQldIcUxKamh0CncyNVNkVzRMYVRoeGw0bUNSbDVMejR4bUp6MzdPSG1oaTZtaktCMFZkT25yWWtrUXNIN0VHeGpscDI4a3RCb08KSXRabkYwd3lXK2tja0ZQa2lZcmREQU5POHY3QUF6dXpEa3gydFhMSHRRZUFsbDJzNlhBQlcycUVMd0dkT0JwWAptREphY1JSTTBBNHZEYjlsNEd4a2dJNGtEMU9rM3VURXBuTE9nbEdzTXRZNFlBNjY0RzRCNG9CQWh5ZGtFdTB1CjNoMzlMSzA5OWIrMENwRE1TZUx5S3lKLzNubkE1clIra1pQQWNodFJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFKR0p2VUozMWhicms3Rzg5UnpLdVhSZCtNODBMZDNRcU4KZ01vT0RLZmV2UWduUmhRNkE4V2M3M2pNL1A3NDlJcHE5VFkrSzY4aitJcUdObWpCZE5USHUwNW42YlgxbEJxdgpRM09jYVVMclRxM2tFYWV5Wm9CYU1kV2g3MnZ6SVVLbWR2d1YyQmVqUU1pclMrVTdybXl1VWlLcm5mcG4vbTJDClpjWTRaZllvbklheFdiemF0VXBzZ2RidXRQYnVsU1FpcHRGUXBlV1g2SmZyMmk3VWtDUlE5MlhtYWo1RkovQ3QKc0kwdndqVk11VVcvWUw5NS94OFl5cHY2SDF5UHBoZG9VQlZvcHUzUU9tVUhuUTVnejRYTkpHVlJoSElSZmY0VgpaSmVBUTY5TGF3emdSeU9Yc0hHYnl3S3NkYitHYWhpTGNySExRSy9mc2pndFJkTWRjQWZ5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEyMjYxMjU4MDNaFw0yMzEyMjYxMjU4MjNaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEFJ1ggcurxXXygIvpPZ3o2JKIjA6iTYgfQwxXsVhmvjOqDqvEhpr6b4CShCD1
            EDp8VAbb7xxicFXjPSkYsRnkTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTOLNLf72LHs8EN8rQBkuoDQinsLDAKBggqhkjOPQQDAgNIADBFAiEA3fmT7sAF
            y0bxDgQrbv7zffr0Dv4gW/Fu5+XlZryI4w4CIFFh6TOm85EDikN23dM36kzLozFJ
            4ZQfQCTJ5Cg4sUFE
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEyMjYxMjU4MDNaFw0yMzEyMjYxMjU4MjNaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEFJ1ggcurxXXygIvpPZ3o2JKIjA6iTYgfQwxXsVhmvjOqDqvEhpr6b4CShCD1
      EDp8VAbb7xxicFXjPSkYsRnkTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTOLNLf72LHs8EN8rQBkuoDQinsLDAKBggqhkjOPQQDAgNIADBFAiEA3fmT7sAF
      y0bxDgQrbv7zffr0Dv4gW/Fu5+XlZryI4w4CIFFh6TOm85EDikN23dM36kzLozFJ
      4ZQfQCTJ5Cg4sUFE
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: thetadr/linkerd-proxy
        pullPolicy: ""
        version: logs-linux-debian-sudo
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TWpZeE1qVTRNRE5hRncweU16RXlNall4TWpVNE1qTmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVGSjFnZ2N1cnhYWHlnSXZwUFozbzJKS0lqQTZpVFlnZlF3eFhzVmhtdmpPcURxdkVocHI2YjRDU2hDRDEKRURwOFZBYmI3eHhpY0ZYalBTa1lzUm5rVHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVE9MTkxmNzJMSHM4RU44clFCa3VvRFFpbnNMREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBM2ZtVDdzQUYKeTBieERnUXJidjd6ZmZyMER2NGdXL0Z1NStYbFpyeUk0dzRDSUZGaDZUT204NUVEaWtOMjNkTTM2a3pMb3pGSgo0WlFmUUNUSjVDZzRzVUZFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBTdmVHdDhSQWZEc09xV0tKbitpa3o2QnZIRG05SUM4K1ByRVluc1EwT3hvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRkoxZ2djdXJ4WFh5Z0l2cFBaM28ySktJakE2aVRZZ2ZRd3hYc1ZobXZqT3FEcXZFaHByNgpiNENTaENEMUVEcDhWQWJiN3h4aWNGWGpQU2tZc1Jua1RnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEyMjYxMjU4MDNaFw0yMzEyMjYxMjU4MjNaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEFJ1ggcurxXXygIvpPZ3o2JKIjA6iTYgfQwxXsVhmvjOqDqvEhpr6b4CShCD1
    EDp8VAbb7xxicFXjPSkYsRnkTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTOLNLf72LHs8EN8rQBkuoDQinsLDAKBggqhkjOPQQDAgNIADBFAiEA3fmT7sAF
    y0bxDgQrbv7zffr0Dv4gW/Fu5+XlZryI4w4CIFFh6TOm85EDikN23dM36kzLozFJ
    4ZQfQCTJ5Cg4sUFE
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 704830c1e3994cbc09ac55552045f1edf47062b777509982b77b9ebf5998e8dc
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 704830c1e3994cbc09ac55552045f1edf47062b777509982b77b9ebf5998e8dc
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "08 13 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 704830c1e3994cbc09ac55552045f1edf47062b777509982b77b9ebf5998e8dc
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: thetadr/controller-linkerd:privileged
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TWpZeE1qVTRNRE5hRncweU16RXlNall4TWpVNE1qTmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFRkoxZ2djdXJ4WFh5Z0l2cFBaM28ySktJakE2aVRZZ2ZRd3hYc1ZobXZqT3FEcXZFaHByNmI0Q1NoQ0QxCiAgICAgICAgRURwOFZBYmI3eHhpY0ZYalBTa1lzUm5rVHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRPTE5MZjcyTEhzOEVOOHJRQmt1b0RRaW5zTERBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQTNmbVQ3c0FGCiAgICAgICAgeTBieERnUXJidjd6ZmZyMER2NGdXL0Z1NStYbFpyeUk0dzRDSUZGaDZUT204NUVEaWtOMjNkTTM2a3pMb3pGSgogICAgICAgIDRaUWZRQ1RKNUNnNHNVRkUKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSVBTdmVHdDhSQWZEc09xV0tKbitpa3o2QnZIRG05SUM4K1ByRVluc1EwT3hvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVGSjFnZ2N1cnhYWHlnSXZwUFozbzJKS0lqQTZpVFlnZlF3eFhzVmhtdmpPcURxdkVocHI2CiAgICAgICAgYjRDU2hDRDFFRHA4VkFiYjd4eGljRlhqUFNrWXNSbmtUZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXlNall4TWpVNE1ETmFGdzB5TXpFeU1qWXhNalU0TWpOYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVGSjFnZ2N1cnhYWHlnSXZwUFozbzJKS0lqQTZpVFlnZlF3eFhzVmhtdmpPcURxdkVocHI2YjRDU2hDRDEKICBFRHA4VkFiYjd4eGljRlhqUFNrWXNSbmtUcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVE9MTkxmNzJMSHM4RU44clFCa3VvRFFpbnNMREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBM2ZtVDdzQUYKICB5MGJ4RGdRcmJ2N3pmZnIwRHY0Z1cvRnU1K1hsWnJ5STR3NENJRkZoNlRPbTg1RURpa04yM2RNMzZrekxvekZKCiAgNFpRZlFDVEo1Q2c0c1VGRQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
